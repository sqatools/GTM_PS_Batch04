Index: Subramanyam/.idea/misc.xml
===================================================================
diff --git a/Subramanyam/.idea/misc.xml b/Subramanyam/.idea/misc.xml
deleted file mode 100644
--- a/Subramanyam/.idea/misc.xml	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ /dev/null	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12" project-jdk-type="Python SDK" />
-</project>
\ No newline at end of file
Index: Sunita/Firstfile.txt
===================================================================
diff --git a/Sunita/Firstfile.txt b/Sunita/Firstfile.txt
deleted file mode 100644
--- a/Sunita/Firstfile.txt	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ /dev/null	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
@@ -1,1 +0,0 @@
-Firstfile in git
Index: Sunita/New Text Document (2).txt
===================================================================
diff --git a/Sunita/New Text Document (2).txt b/Sunita/New Text Document (2).txt
deleted file mode 100644
--- a/Sunita/New Text Document (2).txt	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ /dev/null	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
@@ -1,1 +0,0 @@
-print("Hello world")
Index: Subramanyam/.idea/Subramanyam.iml
===================================================================
diff --git a/Subramanyam/.idea/Subramanyam.iml b/Subramanyam/.idea/Subramanyam.iml
deleted file mode 100644
--- a/Subramanyam/.idea/Subramanyam.iml	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ /dev/null	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="PYTHON_MODULE" version="4">
-  <component name="NewModuleRootManager">
-    <content url="file://$MODULE_DIR$" />
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-  </component>
-</module>
\ No newline at end of file
Index: Subramanyam/.idea/workspace.xml
===================================================================
diff --git a/Subramanyam/.idea/workspace.xml b/Subramanyam/.idea/workspace.xml
deleted file mode 100644
--- a/Subramanyam/.idea/workspace.xml	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ /dev/null	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
@@ -1,60 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ChangeListManager">
-    <list default="true" id="8e60fb5e-dc24-4a71-a39f-c0d7ffc613c6" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/division.py" beforeDir="false" afterPath="$PROJECT_DIR$/division.py" afterDir="false" />
-    </list>
-    <option name="SHOW_DIALOG" value="false" />
-    <option name="HIGHLIGHT_CONFLICTS" value="true" />
-    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-    <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="Git.Settings">
-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
-  </component>
-  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
-  "lastFilter": {
-    "state": "OPEN",
-    "assignee": "Subra133"
-  }
-}]]></component>
-  <component name="GithubPullRequestsUISettings"><![CDATA[{
-  "selectedUrlAndAccountId": {
-    "url": "https://github.com/sqatools/GTM_PS_Batch04.git",
-    "accountId": "1701040b-7cd1-48ea-a0af-bf9d8b5d5bb5"
-  }
-}]]></component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 7
-}]]></component>
-  <component name="ProjectId" id="2gjyi5ZCsvruoWfexc7jrJWDvLE" />
-  <component name="ProjectViewState">
-    <option name="hideEmptyMiddlePackages" value="true" />
-    <option name="showLibraryContents" value="true" />
-  </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Python.division.executor": "Run",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "main"
-  }
-}]]></component>
-  <component name="SharedIndexes">
-    <attachedChunks>
-      <set>
-        <option value="bundled-python-sdk-0509580d9d50-746f403e7f0c-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.14494.241" />
-      </set>
-    </attachedChunks>
-  </component>
-  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-  <component name="TaskManager">
-    <task active="true" id="Default" summary="Default task">
-      <changelist id="8e60fb5e-dc24-4a71-a39f-c0d7ffc613c6" name="Changes" comment="" />
-      <created>1716225405860</created>
-      <option name="number" value="Default" />
-      <option name="presentableId" value="Default" />
-      <updated>1716225405860</updated>
-    </task>
-    <servers />
-  </component>
-</project>
\ No newline at end of file
Index: Subramanyam/.idea/inspectionProfiles/Project_Default.xml
===================================================================
diff --git a/Subramanyam/.idea/inspectionProfiles/Project_Default.xml b/Subramanyam/.idea/inspectionProfiles/Project_Default.xml
deleted file mode 100644
--- a/Subramanyam/.idea/inspectionProfiles/Project_Default.xml	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ /dev/null	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
@@ -1,12 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <profile version="1.0">
-    <option name="myName" value="Project Default" />
-    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="ignoredIdentifiers">
-        <list>
-          <option value="selenium.webdriver.chrome.webdriver.switch_to_alert.*" />
-        </list>
-      </option>
-    </inspection_tool>
-  </profile>
-</component>
\ No newline at end of file
Index: Subramanyam/.idea/modules.xml
===================================================================
diff --git a/Subramanyam/.idea/modules.xml b/Subramanyam/.idea/modules.xml
deleted file mode 100644
--- a/Subramanyam/.idea/modules.xml	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ /dev/null	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/Subramanyam.iml" filepath="$PROJECT_DIR$/.idea/Subramanyam.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: Subramanyam/.idea/inspectionProfiles/profiles_settings.xml
===================================================================
diff --git a/Subramanyam/.idea/inspectionProfiles/profiles_settings.xml b/Subramanyam/.idea/inspectionProfiles/profiles_settings.xml
deleted file mode 100644
--- a/Subramanyam/.idea/inspectionProfiles/profiles_settings.xml	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ /dev/null	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
@@ -1,6 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <settings>
-    <option name="USE_PROJECT_PROFILE" value="false" />
-    <version value="1.0" />
-  </settings>
-</component>
\ No newline at end of file
Index: Subramanyam/.idea/vcs.xml
===================================================================
diff --git a/Subramanyam/.idea/vcs.xml b/Subramanyam/.idea/vcs.xml
deleted file mode 100644
--- a/Subramanyam/.idea/vcs.xml	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ /dev/null	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
Index: Sunita/IfelseCondition.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sunita/IfelseCondition.py b/Sunita/IfelseCondition.py
new file mode 100644
--- /dev/null	(date 1716626927040)
+++ b/Sunita/IfelseCondition.py	(date 1716626927040)
@@ -0,0 +1,55 @@
+
+"""
+if <condition>:
+    code
+else:
+    code
+"""
+
+a = 80
+b = 60
+print(a == b)
+if a == b:
+    print("A and B both have same value")
+else:
+    print("A and B both have different value")
+
+
+# check given number is divisible by 3 or not
+num1 = 9
+
+if num1%3 == 0:
+    print("num1 is divisible by three")
+else:
+    print("num1 is not divisible by three")
+
+print("_"*60)
+
+# program to check given number is even or odd
+print("_"*60)
+input_value = input("Please enter the value :")
+print(input_value, type(input_value))
+
+if int(input_value)%2 == 0:
+    print("This is even number")
+else :
+    print("This is odd number.")
+
+
+# program to check the given number is divisible by 3 and 7
+print("_"*40)
+n1 = 20
+if n1%3 == 0 and n1%7 == 0:
+    print("n1 is divisible by three and seven")
+else:
+    print("n1 is not divisible by three and seven")
+
+
+print("Sunita")
+print("_"*40)
+n2 = 30
+n3 = 50
+if n2 >= n3:
+    print("n2 is greater than n3")
+else:
+    print("n3 is greater then n2")
Index: Sunita/Variable.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sunita/Variable.py b/Sunita/Variable.py
new file mode 100644
--- /dev/null	(date 1716627172971)
+++ b/Sunita/Variable.py	(date 1716627172971)
@@ -0,0 +1,144 @@
+var1 = 10
+print(var1)
+print(type(var1))
+print(id(var1))
+
+###############################
+var2 = "Good Morning"
+print(type(var2))
+print(var2)
+print(id(var2))
+
+# multiple variable with same value then their address will be same
+a = 15
+b = 15
+print(id(a)) # 140714657074040
+print(id(b)) # 140714657074040
+
+# assign multiple values to multiple variables at a time
+
+p, q, r = 50, 50, "Hello"
+print("value of p :", p, id(p))
+print("value of q :", q, id(q))
+print("value of r :", r, id(r))
+
+print("_"*50)
+# Assign one value to multiple variables
+x = y = z = 100
+print("value of x :", x, id(x))
+print("value of y :", y, id(y))
+print("value of z :", z, id(z))
+
+# Rules to declare variable
+# 1. There should not be space in variable name
+
+# var name = 100 : invalid
+var_name = 400
+var_name_variable_value = 500
+
+# 2. special character are not allowed in variable name
+
+# city%name = 'Mumbai' # invalid
+# cit_name  : valid
+# my&name = 'Rahul' # invalid
+# my_name # valid
+
+# 3. Number is not allowed in the begining of variable name
+
+# 123var = 500 # invalid
+# var_123 = 600 # valid
+
+# 4. There is no limitation for variable name, we can declare any length variable
+# abc_pqr_xyz_trtretireitreopitroeitr = 600 : valid
+
+# 5. The variable are case sensitive
+
+name = 'Sunita'
+NAME = 'SUNITA'
+Name = 'Chauhan'
+
+print("name :", name)
+print("NAME :", NAME)
+print("Name :", Name)
+
+# 6. variable name declaration should start from begining of any line
+#    can not add space and then declare variable name.
+
+
+##### Math operations with numbers ####
+# """ : triple quote we use for multiline comments
+"""
++ : plus operator
+- : minus operator
+* : multiplication operator
+/ : division operator
+// : division operator
+%  : Remainder operator
+** : power operator
+== : equal to operator
+= : Assignment operator
+!= : not equal to operator
+"""
+
+print("_"*50)
+# + : plus operator
+
+a1 = 500
+b1 = 600
+c1 = a1+b1
+print("addition :", c1)
+
+
+# - : minus operator
+p1 = 500
+p2 = 300
+p3 = p1 - p2
+print("subtraction :", p3)
+print("subtraction :", p1-p2)
+
+# * : multiplication operation
+x1 = 5
+x2 = 50
+x3 = "Hello"
+print("multiplication :", x1*x2) # 250
+print("Repeat string :", x3*x1) # HelloHelloHelloHelloHello
+
+# division with single / and double //
+
+q1 = 50
+q2 = 6
+q3 = 7
+print("division with single / :", q1/q2) # 8.333333333333334
+print("division with double // :", q1//q3) # 7
+
+
+# % : remainder operator
+
+var1 = 14
+var2 = 5
+print("remainder value :", var1%var2) # 4
+
+# ** power operator
+print("square of 5 :", 5**2) # 25
+print("cube of 6 :", 6**3) # 216
+
+# == : equal to operator
+v1 = 500
+v2 = 600
+v3 = 500
+print("compare and v1 and v2 :", v1 == v2) # False
+print("compare and v1 and v3 :", v1 == v3) # True
+print("compare and v1 and v3 :", v1 != v2) # True
+
+
+# solve the equation
+#(a+b)^2 = a^2 + b^2 + 2ab
+a = 40
+b = 30
+
+LHS = (a+b)**2
+print("LHS output :", LHS)
+
+RHS = a**2 + b**2 + 2*a*b
+print("RHS output :",RHS)
+
Index: Sunita/Datatypeconversion.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sunita/Datatypeconversion.py b/Sunita/Datatypeconversion.py
new file mode 100644
--- /dev/null	(date 1716627858290)
+++ b/Sunita/Datatypeconversion.py	(date 1716627858290)
@@ -0,0 +1,399 @@
+"""
+Python Data Type
+
+1. Number Data Type
+    i).  Integer
+    ii). Float
+    iii). Complex
+
+2. Sequential Data Type
+    i). String
+    ii). List
+    iiI). Tuple
+
+3. Dictionary
+4. Set
+5. Boolean
+"""
+
+############# Integer #####
+
+# int -> float
+
+var1 = 664
+v2 = float(var1)
+print(v2, type(v2))  # 664.0
+print(float(var1), type(float(var1)))
+
+print("_" * 40)
+
+####### int -> string  #######
+var3 = 4567
+s1 = str(var3)
+print(s1, type(s1), s1[1])
+
+##### int -> list ##### conversion is not possible
+"""
+var4 = 6789
+l1 = list(var4)  # TypeError: 'int' object is not iterable
+print(l1)
+"""
+
+### int -> tuple # conversion is not possible
+### int -> dict # # conversion is not possible
+### int -> set # conversion is not possible
+print("_" * 50)
+#### int -> boolean
+
+n1 = 0
+b1 = bool(n1)
+print(b1, type(b1))  # False <class 'bool'>
+
+n1 = 345
+b2 = bool(n1)
+print(b2, type(b2))  # True <class 'bool'>
+
+################## Float ###############
+print("_" * 50)
+
+##### float -> int ########
+
+v1 = 44.56
+n1 = int(v1)
+print(n1, type(n1))  # 44 <class 'int'>
+
+print("_" * 50)
+
+### Float -> String
+v2 = 456.78
+s2 = str(v2)
+print(s2, type(s2), s2[4], s2[3])  # 456.78 <class 'str'> 7 .
+
+print("_" * 50)
+#### Float -> List # conversion is not possible.
+#### Float -> Dict # # conversion is not possible
+#### Float -> Tuple # # conversion is not possible
+#### Float -> Set # # conversion is not possible
+
+#### Float -> Boolean #
+
+a1 = 0.0
+b1 = bool(a1)
+print(b1, type(b1))  # False <class 'bool'>
+
+a2 = 56.789
+b2 = bool(a2)
+print(b2, type(b2))  # True <class 'bool'>
+
+################# String Datatype Conversion ################
+
+print("_" * 40)
+### string -> int ###
+
+#### Can not convert word into number ###
+"""
+str1 = "Hello"
+n1 = int(str1)  # invalid literal for int() with base 10: 'Hello'
+print(n1, type(n1))
+"""
+
+#### IF string is holding only number then the conversion is possible
+
+str2 = "56546456456"
+n2 = int(str2)
+print(n2, type(n2))  # 56546456456 <class 'int'>
+print(n2 * 2)  # 113092912912
+
+print("_" * 40)
+######## string -> float ########
+
+"""
+str_a = "Python Programming"
+f1 = float(str_a)  # could not convert string to float: 'Python Programming'
+print(f1)
+"""
+
+## string holding only float value then we can convert ##
+str_b = "45"
+f2 = float(str_b)
+print(f2, type(f2))  # 45.68 <class 'float'>
+
+#### string -> list #######
+print("_" * 50)
+str3 = "Python"
+list1 = list(str3)
+print(list1, type(list1))
+# ['P', 'y', 't', 'h', 'o', 'n'] <class 'list'>
+
+#### string -> Tuple #######
+print("_" * 50)
+str4 = "Programming"
+tup2 = tuple(str4)
+print(tup2, type(tup2))
+# ('P', 'r', 'o', 'g', 'r', 'a', 'm', 'm', 'i', 'n', 'g') <class 'tuple'>
+
+
+#### string -> Dictionary #### direct conversion is not possible
+print("_" * 50)
+
+"""
+str4 = "Grow TechMind"
+d1 = dict(str4)
+print(d1)
+# ValueError: dictionary update sequence element #0 has length 1; 2 is required
+"""
+
+import json
+
+str5 = '{"Name" : "Rahul", "age" : 25, "address" : "Pune"}'
+dict2 = json.loads(str5)
+print(dict2, dict2['Name'])
+# {'Name': 'Rahul', 'age': 25, 'address': 'Pune'} Rahul
+
+### string -> set ####
+print("_" * 50)
+
+str5 = "Python Programming"
+set1 = set(str5)
+print(set1, type(set1))
+# {'o', 'm', 'a', 'h', 'i', 'P', 'y', 'g', 'r', ' ', 't', 'n'} <class 'set'>
+
+### string -> Boolean ####
+print("_" * 50)
+
+str_p = ""
+b1 = bool(str_p)
+print(b1, type(b1))  # False <class 'bool'>
+
+str_q = "Hello"
+b2 = bool(str_q)
+print(b2, type(b2))  # True <class 'bool'>
+
+############# List Data Type Conversion ########
+
+### list -> int ### Conversion is not possible
+### list -> float ### Conversion is not possible
+
+### list -> String ###
+print("_" * 50)
+list_a = [4, 6, 8, 2]
+str1 = str(list_a)
+print(str1, type(str1), str1[0], str1[1], str1[-1])
+
+### list -> tuple ###
+print("_" * 50)
+list_b = [1, 6, 8, 2]
+tup2 = tuple(list_b)
+print(tup2, type(tup2), tup2[2])
+
+### list -> dict ###  conversion is not possible
+print("_" * 50)
+"""
+list_c = [3, 6, 11, 33]
+dict2 = dict(list_c)
+print(dict2)
+# TypeError: cannot convert dictionary update sequence element #0 to a sequence
+"""
+l1 = ['a', 'b', 'c', 'd']
+l2 = [2, 5, 8, 1]
+
+output = dict(zip(l1,  l2))
+print(output)
+#{'a': 2, 'b': 5, 'c': 8, 'd': 1}
+print(output['a'])  #2
+
+### list -> set ###
+print("_" * 50)
+list_d = [5, 8, 'a', 'b', 22, 55, 22, 8, 5,33.1, 7]
+set_d = set(list_d)
+print(set_d)
+# {33.1, 5, 7, 8, 'b', 22, 55, 'a'}
+
+#### list ->  boolean ###
+print("_" * 50)
+list_e = []
+b1 = bool(list_e)
+print(b1, type(b1))  # False <class 'bool'>
+
+list_f = [4, 7, 8]
+b2 = bool(list_f)
+print(b2, type(b2))  # True <class 'bool'>
+
+
+################# Tuple Datatype Conversion ###############
+
+### tuple-> int   ###### conversion is not possible
+# tup1 = ('4', '7', '8', '2')
+# result = "".join(tup1)
+# print(result, type(result), int(result))
+
+### tuple-> float ###### conversion is not possible
+### tuple-> string ######
+print("_"*40)
+tup_a = (4, 7, 2, 8)
+str_a = str(tup_a)
+print(str_a, type(str_a), str_a[0], str_a[4])
+# (4, 7, 2, 8) <class 'str'> ( 7
+
+
+### tuple -> list ###
+print("_"*40)
+tup_b = (5, 7, 2, 8)
+list_b = list(tup_b)
+print(list_b, type(list_b))
+# [5, 7, 2, 8] <class 'list'>
+
+### tuple -> dict ### direct conversion is not possible
+print("_"*40)
+
+tup_f = ('P','Q', 'R', 'S')
+tup_c = (4, 7, 2, 1)
+result = dict(zip(tup_f, tup_c))
+print(result)
+# {'P': 4, 'Q': 7, 'R': 2, 'S': 1}
+
+###### tuple -> set ######
+tup_d = (4, 7, 8, 'a', 11, 4, 7, 'a')
+set_d = set(tup_d)
+print(set_d)
+# {4, 7, 8, 11, 'a'}
+
+#### tuple -> boolean ###
+tup_e = ()
+bool_e = bool(tup_e)
+print(bool_e, type(bool_e))  # False <class 'bool'>
+
+
+tup_f = (4, 7, 8)
+bool_f = bool(tup_f)
+print(bool_f, type(bool_f))  # True <class 'bool'>
+
+
+################## Dictionary Data Type Conversion #########
+
+# dict -> int # conversion is not possible
+# dict -> float # conversion is not possible
+# dict -> string
+print("_"*40)
+dict1 = {'a' : 123, 'b' : 345}
+str1 = str(dict1)
+print(str1, type(str1), str1[2])  # {'a': 123, 'b': 345} <class 'str'> a
+
+#### dict -> list ####
+print("_"*50)
+dict2 = {'a' : 123, 'b' : 345, 'c' : 444}
+list1 = list(dict2)
+print(list1, type(list1)) # ['a', 'b', 'c'] <class 'list'>
+
+#### dict -> tuple ###
+print("_"*50)
+dict2 = {'a' : 123, 'b' : 345, 'c' : 444, 'd': 132}
+tupl1 = tuple(dict2)
+print(tupl1, type(tupl1))  # ('a', 'b', 'c', 'd') <class 'tuple'>
+
+
+#### dict -> set #######
+dict_a = {'a' : 123, 'b' : 345, 'c' : 444, 'd': 132}
+set1 = set(dict_a)
+print(set1, type(set1)) # {'d', 'c', 'a', 'b'} <class 'set'>
+
+#### dict -> Boolean ###
+
+dict_b = {'P': 123, 'Q': 456, 'R': 333}
+b1 = bool(dict_b)
+print(b1, type(b1))  # True <class 'bool'>
+
+dict_c = {}
+b2 = bool(dict_c)
+print(b2, type(b2))  # False <class 'bool'>
+
+print(dict_b.values())
+
+
+################## Set Data Type #########################
+# set -> int # conversion is not possible
+# set -> float # conversion is not possible
+
+### set -> string ####
+print("_"*50)
+set1 = {4, 7, 2, 5, 1, 4, 'a', 'b'}
+s1= str(set1)
+print(s1, type(s1), s1[0], s1[1]) # {1, 2, 4, 5, 7, 'a', 'b'} <class 'str'> { 1
+
+
+#### set -> list ###
+
+set2 = {4, 7, 2, 7, 12, 2, 4}
+list1 = list(set2)
+print(list1, type(list1))  # [2, 4, 12, 7] <class 'list'>
+
+### set -> tuple ###
+set3 = {4, 7, 2, 7, 12, 2, 4}
+tup2 = tuple(set3)
+print(tup2, type(tup2))  # (2, 4, 12, 7) <class 'tuple'>
+
+### set -> dict ### # conversion is not possible
+"""
+set4 = {4, 7, 2, 7, 11, 44}
+d1 = dict(set4)
+print(d1)
+"""
+# TypeError: cannot convert dictionary update sequence element #0 to a sequence
+
+### set -> boolean ###
+
+set4 = set()
+b1 = bool(set4)
+print(b1, type(b1))  # False <class 'bool'>
+
+set5 = {4, 6, 2, 6, 7, 2}
+b2 = bool(set5)
+print(b2, type(b2))  # True <class 'bool'>
+
+################### Boolean Data Type Conversion ##########
+# bool -> int
+print("_"*50)
+b1 = True
+n1 = int(b1)
+print(n1, type(n1))  # 1 <class 'int'>
+
+######## bool -> float ##########
+print("_"*50)
+bool2 = False
+b2 = float(bool2)
+print(b2, type(b2))  # 0.0 <class 'float'>
+
+#### Bool - string ###
+b3 = True
+s1 = str(b3)
+print(s1, type(s1), s1[0])  # True <class 'str'> T
+
+#### Bool - List ### : conversion  is not possible
+"""
+b4 = False
+l4 = list(b4)
+print(l4)
+"""
+# TypeError: 'bool' object is not iterable
+
+### bool -> tuple ###  : conversion  is not possible
+#### bool -> dict #### : conversion  is not possible
+"""
+b5 = False
+di1 = dict(b5)
+print(di1, type(di1))
+"""
+#### bool -> set #### : conversion  is not possible
+
+b5 = False
+di1 = dict(b5)
+
+
+
+
+
+
+
+
+
+
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"Python 3.12\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ b/.idea/misc.xml	(date 1716626684138)
@@ -1,4 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="Black">
+    <option name="sdkName" value="Python 3.12" />
+  </component>
   <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.12" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: Mahila/pythonprogramming/pythonvariables/pythonvariablefirstfile.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var1=20\r\n#print variable\r\nprint(var1)\r\n#print what kind of data the variable holds\r\nprint(type(var1))\r\n#print the address where the variable is stored\r\nprint(id(var1))\r\n\r\n#string type\r\nvar2 = \"good morning\"\r\nprint(var2)\r\nprint(type(var2))\r\n\r\n#multiple variable wtih same value,then there address will be same\r\na=10\r\nb=10\r\nprint(id(a))\r\nprint(id(b))\r\n\r\n#assign multiple values to multiple variables at a time\r\np, q, r = 50, 60, \"hello\"\r\nprint(\"value of q :\", q)\r\nprint(\"value of r :\", r)\r\n\r\nprint(\"-\"*50)\r\n#assign one value to multiple variable\r\nx = y = z =100\r\nprint(\"value of z : \",z)\r\nprint(\"value of y : \",y)\r\n\r\n\r\nprint(\"_\"*50)\r\nprint(\"hello\"*8)\r\n\r\n##Operators\r\nprint(\"-\"*50)\r\na1=500\r\nb1=400\r\nc1=a1+b1\r\nprint(\"addition : \", c1)\r\n\r\nprint(\"-\"*50)\r\np1=100\r\np2=50\r\nprint(\"subtract :\", p1-p2)\r\n\r\nprint(\"-\"*50)\r\nx1 = 5\r\nx2 = 6\r\nprint(\"multiplication : \",x1*x2)\r\n\r\nprint(\"-\"*50)\r\n#division with /\r\n\r\nq1=50\r\nq2=6\r\nq3=7\r\nprint(\"division : \", q1/q2)\r\nprint(\"division : \", q1//q2)\r\n\r\nprint(\"-\"*50)\r\nV1=14\r\nV2=5\r\nprint(\"reminder : \", V1%V2)\r\n\r\nprint(\"-\"*50)\r\nprint(\"power of 5 : \", 5**2)\r\n\r\nprint(\"-\"*50)\r\n\r\nV1=500\r\nV2=600\r\nV3=500\r\nprint(\"equals :\", V1==V2)\r\nprint(\"equals :\", V1==V3)\r\nprint(\"equals :\", V1!=V2)\r\n\r\nprint(\"-\"*50)\r\n\r\n#(a+b)^2 = a^2 + 2ab + b^2 -- Quadratic equation\r\na=40\r\nb=30\r\n\r\nLHS = (a+b)**2\r\nprint(\"LHS Output: \",LHS)\r\n\r\nRHS = a**2 + 2*a*b + b**2\r\nprint(\"RHS Output :\",RHS)\r\nprint(\"-\"*50)\r\n#########################################################################################\r\n\"\"\"\r\nPython program to repeat a given string 5 times.\r\nInput :\r\nstr1 = “SQATools”\r\nOutput :\r\n“SQAToolsSQAToolsSQAToolsSQAToolsSQATools” \r\n\"\"\"\r\nstr1 = \"SQATools\"\r\nprint(str1*5)\r\n\r\nprint(\"-\"*50)\r\n\"\"\"\r\nPython program to get the Average of given numbers.\r\nFormula: sum of all the number/ total number\r\nInput:\r\na = 40\r\nb = 50\r\nc = 30\r\nOutput :\r\nAverage = 40\r\n\"\"\"\r\na = 40\r\nb = 50\r\nc = 30\r\nprint(\"average : \",(a+b+c)/3)\r\n\r\nprint(\"-\"*50)\r\n\r\n\"\"\"\r\nPython program to get the median of given numbers.\r\nNote: all the numbers should be arranged in ascending order\r\nFormula : (n+1)/2\r\nn = Number of values\r\nInput : [45, 60, 61, 66, 70, 77, 80]\r\nOutput:  66\r\n\"\"\"\r\n\"\"\"\r\nPython program to print the square and cube of a given number.\r\nInput :\r\nnum1 = 9\r\nOutput :\r\nSquare = 81\r\nCube =   729\r\n\"\"\"\r\n\r\nnum1=9\r\nprint(\"sqaure =\", 9**2)\r\nprint(\"cube =\", 9**3)\r\n\r\nprint(\"-\"*50)\r\n\"\"\"\r\nPython program to interchange values between variables.\r\nInput :\r\na = 10\r\nb = 20\r\nOutput :\r\na = 20\r\nb = 10\r\n\"\"\"\r\na = 10\r\nb = 20\r\na,b = b,a\r\n\r\nprint(\"value of a: \",a)\r\nprint(\"value of b: \",b)\r\n\r\nprint(\"-\"*50)\r\n\"\"\"\r\nPython program to solve this Pythagorous theorem.\r\nTheorem : (a2 + b2 = c2)\r\n\"\"\"\r\n\r\n\"\"\"\r\nPython program to solve the given math formula.\r\nFormula : (a – b)2 = a^2 + b^2 – 2ab\r\n\"\"\"\r\na=10\r\nb=20\r\n\r\nLHS = ((a-b)**2)\r\nprint(LHS)\r\n\r\nRHS =((a**2) + (b**2) - (2*a*b))\r\nprint(RHS)\r\n\r\nprint(LHS==RHS)\r\n\r\nprint(\"-\"*50)\r\n\r\n\"\"\"\r\nPython program to solve the given math formula.\r\nFormula : a2 – b2 = (a-b)(a+b)\r\n\"\"\"\r\na=5\r\nb=4\r\n\r\nLHS = ((a**2)-(b**2))\r\nprint(LHS)\r\n\r\nRHS =((a-b)*(a+b))\r\nprint(RHS)\r\n\r\nprint(LHS==RHS)\r\n\r\nprint(\"-\"*50)\r\n\r\n\"\"\"\r\nPython program to solve the given math formula.\r\nFormula : (a + b)3 = a3 + 3ab(a+b) + b3 \r\n\"\"\"\r\na=10\r\nb=20\r\n\r\nLHS=((a+b)**3)\r\nprint(LHS)\r\n\r\nRHS=((a**3)+((3*a*b)*(a+b))+(b**3))\r\nprint(RHS)\r\n\r\nprint(LHS==RHS)\r\n\r\nprint(\"-\"*50)\r\n\r\n\"\"\"\r\nPython program to solve the given math formula.\r\nFormula : (a – b)3 = a3 – 3a2b + 3ab2 – b3\r\n\"\"\"\r\na=10\r\nb=5\r\nLHS =((a-b)**3)\r\nprint(LHS)\r\n\r\nRHS =((a**3)-(3*(a**2)*b)+(3*a*(b**2))-(b**3))\r\nprint(RHS)\r\n\r\nprint(LHS==RHS)\r\n\r\n\"\"\"\r\nPython program to calculate the area of the square.\r\nFormula : area = a*a\r\n\"\"\"\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Mahila/pythonprogramming/pythonvariables/pythonvariablefirstfile.py b/Mahila/pythonprogramming/pythonvariables/pythonvariablefirstfile.py
--- a/Mahila/pythonprogramming/pythonvariables/pythonvariablefirstfile.py	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ b/Mahila/pythonprogramming/pythonvariables/pythonvariablefirstfile.py	(date 1716625246567)
@@ -6,6 +6,11 @@
 #print the address where the variable is stored
 print(id(var1))
 
+a1=100
+print(a1)
+print(modify(a1=200))
+
+
 #string type
 var2 = "good morning"
 print(var2)
Index: Sunita/first_Python.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>print(\"Hello world\")\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sunita/first_Python.py b/Sunita/first_Python.py
--- a/Sunita/first_Python.py	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ b/Sunita/first_Python.py	(date 1716627858290)
@@ -1,1 +1,399 @@
-print("Hello world")
+"""
+Python Data Type
+
+1. Number Data Type
+    i).  Integer
+    ii). Float
+    iii). Complex
+
+2. Sequential Data Type
+    i). String
+    ii). List
+    iiI). Tuple
+
+3. Dictionary
+4. Set
+5. Boolean
+"""
+
+############# Integer #####
+
+# int -> float
+
+var1 = 664
+v2 = float(var1)
+print(v2, type(v2))  # 664.0
+print(float(var1), type(float(var1)))
+
+print("_" * 40)
+
+####### int -> string  #######
+var3 = 4567
+s1 = str(var3)
+print(s1, type(s1), s1[1])
+
+##### int -> list ##### conversion is not possible
+"""
+var4 = 6789
+l1 = list(var4)  # TypeError: 'int' object is not iterable
+print(l1)
+"""
+
+### int -> tuple # conversion is not possible
+### int -> dict # # conversion is not possible
+### int -> set # conversion is not possible
+print("_" * 50)
+#### int -> boolean
+
+n1 = 0
+b1 = bool(n1)
+print(b1, type(b1))  # False <class 'bool'>
+
+n1 = 345
+b2 = bool(n1)
+print(b2, type(b2))  # True <class 'bool'>
+
+################## Float ###############
+print("_" * 50)
+
+##### float -> int ########
+
+v1 = 44.56
+n1 = int(v1)
+print(n1, type(n1))  # 44 <class 'int'>
+
+print("_" * 50)
+
+### Float -> String
+v2 = 456.78
+s2 = str(v2)
+print(s2, type(s2), s2[4], s2[3])  # 456.78 <class 'str'> 7 .
+
+print("_" * 50)
+#### Float -> List # conversion is not possible.
+#### Float -> Dict # # conversion is not possible
+#### Float -> Tuple # # conversion is not possible
+#### Float -> Set # # conversion is not possible
+
+#### Float -> Boolean #
+
+a1 = 0.0
+b1 = bool(a1)
+print(b1, type(b1))  # False <class 'bool'>
+
+a2 = 56.789
+b2 = bool(a2)
+print(b2, type(b2))  # True <class 'bool'>
+
+################# String Datatype Conversion ################
+
+print("_" * 40)
+### string -> int ###
+
+#### Can not convert word into number ###
+"""
+str1 = "Hello"
+n1 = int(str1)  # invalid literal for int() with base 10: 'Hello'
+print(n1, type(n1))
+"""
+
+#### IF string is holding only number then the conversion is possible
+
+str2 = "56546456456"
+n2 = int(str2)
+print(n2, type(n2))  # 56546456456 <class 'int'>
+print(n2 * 2)  # 113092912912
+
+print("_" * 40)
+######## string -> float ########
+
+"""
+str_a = "Python Programming"
+f1 = float(str_a)  # could not convert string to float: 'Python Programming'
+print(f1)
+"""
+
+## string holding only float value then we can convert ##
+str_b = "45"
+f2 = float(str_b)
+print(f2, type(f2))  # 45.68 <class 'float'>
+
+#### string -> list #######
+print("_" * 50)
+str3 = "Python"
+list1 = list(str3)
+print(list1, type(list1))
+# ['P', 'y', 't', 'h', 'o', 'n'] <class 'list'>
+
+#### string -> Tuple #######
+print("_" * 50)
+str4 = "Programming"
+tup2 = tuple(str4)
+print(tup2, type(tup2))
+# ('P', 'r', 'o', 'g', 'r', 'a', 'm', 'm', 'i', 'n', 'g') <class 'tuple'>
+
+
+#### string -> Dictionary #### direct conversion is not possible
+print("_" * 50)
+
+"""
+str4 = "Grow TechMind"
+d1 = dict(str4)
+print(d1)
+# ValueError: dictionary update sequence element #0 has length 1; 2 is required
+"""
+
+import json
+
+str5 = '{"Name" : "Rahul", "age" : 25, "address" : "Pune"}'
+dict2 = json.loads(str5)
+print(dict2, dict2['Name'])
+# {'Name': 'Rahul', 'age': 25, 'address': 'Pune'} Rahul
+
+### string -> set ####
+print("_" * 50)
+
+str5 = "Python Programming"
+set1 = set(str5)
+print(set1, type(set1))
+# {'o', 'm', 'a', 'h', 'i', 'P', 'y', 'g', 'r', ' ', 't', 'n'} <class 'set'>
+
+### string -> Boolean ####
+print("_" * 50)
+
+str_p = ""
+b1 = bool(str_p)
+print(b1, type(b1))  # False <class 'bool'>
+
+str_q = "Hello"
+b2 = bool(str_q)
+print(b2, type(b2))  # True <class 'bool'>
+
+############# List Data Type Conversion ########
+
+### list -> int ### Conversion is not possible
+### list -> float ### Conversion is not possible
+
+### list -> String ###
+print("_" * 50)
+list_a = [4, 6, 8, 2]
+str1 = str(list_a)
+print(str1, type(str1), str1[0], str1[1], str1[-1])
+
+### list -> tuple ###
+print("_" * 50)
+list_b = [1, 6, 8, 2]
+tup2 = tuple(list_b)
+print(tup2, type(tup2), tup2[2])
+
+### list -> dict ###  conversion is not possible
+print("_" * 50)
+"""
+list_c = [3, 6, 11, 33]
+dict2 = dict(list_c)
+print(dict2)
+# TypeError: cannot convert dictionary update sequence element #0 to a sequence
+"""
+l1 = ['a', 'b', 'c', 'd']
+l2 = [2, 5, 8, 1]
+
+output = dict(zip(l1,  l2))
+print(output)
+#{'a': 2, 'b': 5, 'c': 8, 'd': 1}
+print(output['a'])  #2
+
+### list -> set ###
+print("_" * 50)
+list_d = [5, 8, 'a', 'b', 22, 55, 22, 8, 5,33.1, 7]
+set_d = set(list_d)
+print(set_d)
+# {33.1, 5, 7, 8, 'b', 22, 55, 'a'}
+
+#### list ->  boolean ###
+print("_" * 50)
+list_e = []
+b1 = bool(list_e)
+print(b1, type(b1))  # False <class 'bool'>
+
+list_f = [4, 7, 8]
+b2 = bool(list_f)
+print(b2, type(b2))  # True <class 'bool'>
+
+
+################# Tuple Datatype Conversion ###############
+
+### tuple-> int   ###### conversion is not possible
+# tup1 = ('4', '7', '8', '2')
+# result = "".join(tup1)
+# print(result, type(result), int(result))
+
+### tuple-> float ###### conversion is not possible
+### tuple-> string ######
+print("_"*40)
+tup_a = (4, 7, 2, 8)
+str_a = str(tup_a)
+print(str_a, type(str_a), str_a[0], str_a[4])
+# (4, 7, 2, 8) <class 'str'> ( 7
+
+
+### tuple -> list ###
+print("_"*40)
+tup_b = (5, 7, 2, 8)
+list_b = list(tup_b)
+print(list_b, type(list_b))
+# [5, 7, 2, 8] <class 'list'>
+
+### tuple -> dict ### direct conversion is not possible
+print("_"*40)
+
+tup_f = ('P','Q', 'R', 'S')
+tup_c = (4, 7, 2, 1)
+result = dict(zip(tup_f, tup_c))
+print(result)
+# {'P': 4, 'Q': 7, 'R': 2, 'S': 1}
+
+###### tuple -> set ######
+tup_d = (4, 7, 8, 'a', 11, 4, 7, 'a')
+set_d = set(tup_d)
+print(set_d)
+# {4, 7, 8, 11, 'a'}
+
+#### tuple -> boolean ###
+tup_e = ()
+bool_e = bool(tup_e)
+print(bool_e, type(bool_e))  # False <class 'bool'>
+
+
+tup_f = (4, 7, 8)
+bool_f = bool(tup_f)
+print(bool_f, type(bool_f))  # True <class 'bool'>
+
+
+################## Dictionary Data Type Conversion #########
+
+# dict -> int # conversion is not possible
+# dict -> float # conversion is not possible
+# dict -> string
+print("_"*40)
+dict1 = {'a' : 123, 'b' : 345}
+str1 = str(dict1)
+print(str1, type(str1), str1[2])  # {'a': 123, 'b': 345} <class 'str'> a
+
+#### dict -> list ####
+print("_"*50)
+dict2 = {'a' : 123, 'b' : 345, 'c' : 444}
+list1 = list(dict2)
+print(list1, type(list1)) # ['a', 'b', 'c'] <class 'list'>
+
+#### dict -> tuple ###
+print("_"*50)
+dict2 = {'a' : 123, 'b' : 345, 'c' : 444, 'd': 132}
+tupl1 = tuple(dict2)
+print(tupl1, type(tupl1))  # ('a', 'b', 'c', 'd') <class 'tuple'>
+
+
+#### dict -> set #######
+dict_a = {'a' : 123, 'b' : 345, 'c' : 444, 'd': 132}
+set1 = set(dict_a)
+print(set1, type(set1)) # {'d', 'c', 'a', 'b'} <class 'set'>
+
+#### dict -> Boolean ###
+
+dict_b = {'P': 123, 'Q': 456, 'R': 333}
+b1 = bool(dict_b)
+print(b1, type(b1))  # True <class 'bool'>
+
+dict_c = {}
+b2 = bool(dict_c)
+print(b2, type(b2))  # False <class 'bool'>
+
+print(dict_b.values())
+
+
+################## Set Data Type #########################
+# set -> int # conversion is not possible
+# set -> float # conversion is not possible
+
+### set -> string ####
+print("_"*50)
+set1 = {4, 7, 2, 5, 1, 4, 'a', 'b'}
+s1= str(set1)
+print(s1, type(s1), s1[0], s1[1]) # {1, 2, 4, 5, 7, 'a', 'b'} <class 'str'> { 1
+
+
+#### set -> list ###
+
+set2 = {4, 7, 2, 7, 12, 2, 4}
+list1 = list(set2)
+print(list1, type(list1))  # [2, 4, 12, 7] <class 'list'>
+
+### set -> tuple ###
+set3 = {4, 7, 2, 7, 12, 2, 4}
+tup2 = tuple(set3)
+print(tup2, type(tup2))  # (2, 4, 12, 7) <class 'tuple'>
+
+### set -> dict ### # conversion is not possible
+"""
+set4 = {4, 7, 2, 7, 11, 44}
+d1 = dict(set4)
+print(d1)
+"""
+# TypeError: cannot convert dictionary update sequence element #0 to a sequence
+
+### set -> boolean ###
+
+set4 = set()
+b1 = bool(set4)
+print(b1, type(b1))  # False <class 'bool'>
+
+set5 = {4, 6, 2, 6, 7, 2}
+b2 = bool(set5)
+print(b2, type(b2))  # True <class 'bool'>
+
+################### Boolean Data Type Conversion ##########
+# bool -> int
+print("_"*50)
+b1 = True
+n1 = int(b1)
+print(n1, type(n1))  # 1 <class 'int'>
+
+######## bool -> float ##########
+print("_"*50)
+bool2 = False
+b2 = float(bool2)
+print(b2, type(b2))  # 0.0 <class 'float'>
+
+#### Bool - string ###
+b3 = True
+s1 = str(b3)
+print(s1, type(s1), s1[0])  # True <class 'str'> T
+
+#### Bool - List ### : conversion  is not possible
+"""
+b4 = False
+l4 = list(b4)
+print(l4)
+"""
+# TypeError: 'bool' object is not iterable
+
+### bool -> tuple ###  : conversion  is not possible
+#### bool -> dict #### : conversion  is not possible
+"""
+b5 = False
+di1 = dict(b5)
+print(di1, type(di1))
+"""
+#### bool -> set #### : conversion  is not possible
+
+b5 = False
+di1 = dict(b5)
+
+
+
+
+
+
+
+
+
+
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"eb48b3d2-4915-4523-ba84-36186bc051b9\" name=\"Changes\" comment=\"adding\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Sunita1github&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/sqatools/GTM_PS_Batch04.git&quot;,\r\n    &quot;accountId&quot;: &quot;090e35a7-7d7a-4451-bbf4-ebdd2fd2f6d1&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2gjhJjWn7Wv9OTiffbmeLFGcwVs\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Python.first_Python.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/Sunita_Git/GTM_PS_Batch04&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"first_Python\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"GTM_PS_Batch04\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Sunita\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Sunita/first_Python.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.first_Python\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-babbdf50b680-746f403e7f0c-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.15989.155\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"eb48b3d2-4915-4523-ba84-36186bc051b9\" name=\"Changes\" comment=\"\" />\r\n      <created>1716216823304</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1716216823304</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"adding first python file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716217038374</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716217038374</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"adding first python file\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1716309656424</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1716309656424</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"adding first python file\" />\r\n    <MESSAGE value=\"adding\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"adding\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ b/.idea/workspace.xml	(date 1716828590543)
@@ -4,7 +4,6 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="eb48b3d2-4915-4523-ba84-36186bc051b9" name="Changes" comment="adding" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -13,37 +12,18 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GitHubPullRequestSearchHistory">{
-  &quot;lastFilter&quot;: {
-    &quot;state&quot;: &quot;OPEN&quot;,
-    &quot;assignee&quot;: &quot;Sunita1github&quot;
   }
-}</component>
   <component name="GithubPullRequestsUISettings">{
   &quot;selectedUrlAndAccountId&quot;: {
     &quot;url&quot;: &quot;https://github.com/sqatools/GTM_PS_Batch04.git&quot;,
-    &quot;accountId&quot;: &quot;090e35a7-7d7a-4451-bbf4-ebdd2fd2f6d1&quot;
   }
 }</component>
-  <component name="ProjectColorInfo">{
-  &quot;associatedIndex&quot;: 7
-}</component>
-  <component name="ProjectId" id="2gjhJjWn7Wv9OTiffbmeLFGcwVs" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Python.first_Python.executor&quot;: &quot;Run&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
-    &quot;last_opened_file_path&quot;: &quot;C:/Sunita_Git/GTM_PS_Batch04&quot;
   }
-}</component>
   <component name="RunManager">
-    <configuration name="first_Python" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
-      <module name="GTM_PS_Batch04" />
       <option name="ENV_FILES" value="" />
       <option name="INTERPRETER_OPTIONS" value="" />
       <option name="PARENT_ENVS" value="true" />
@@ -51,11 +31,9 @@
         <env name="PYTHONUNBUFFERED" value="1" />
       </envs>
       <option name="SDK_HOME" value="" />
-      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Sunita" />
       <option name="IS_MODULE_SDK" value="true" />
       <option name="ADD_CONTENT_ROOTS" value="true" />
       <option name="ADD_SOURCE_ROOTS" value="true" />
-      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Sunita/first_Python.py" />
       <option name="PARAMETERS" value="" />
       <option name="SHOW_COMMAND_LINE" value="false" />
       <option name="EMULATE_TERMINAL" value="false" />
@@ -64,50 +42,20 @@
       <option name="INPUT_FILE" value="" />
       <method v="2" />
     </configuration>
-    <recent_temporary>
-      <list>
-        <item itemvalue="Python.first_Python" />
-      </list>
-    </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="bundled-python-sdk-babbdf50b680-746f403e7f0c-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.15989.155" />
       </set>
     </attachedChunks>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
-      <changelist id="eb48b3d2-4915-4523-ba84-36186bc051b9" name="Changes" comment="" />
-      <created>1716216823304</created>
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
-      <updated>1716216823304</updated>
     </task>
-    <task id="LOCAL-00001" summary="adding first python file">
-      <option name="closed" value="true" />
-      <created>1716217038374</created>
-      <option name="number" value="00001" />
-      <option name="presentableId" value="LOCAL-00001" />
-      <option name="project" value="LOCAL" />
-      <updated>1716217038374</updated>
-    </task>
-    <task id="LOCAL-00002" summary="adding first python file">
-      <option name="closed" value="true" />
-      <created>1716309656424</created>
-      <option name="number" value="00002" />
-      <option name="presentableId" value="LOCAL-00002" />
-      <option name="project" value="LOCAL" />
-      <updated>1716309656424</updated>
-    </task>
-    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
-  <component name="VcsManagerConfiguration">
-    <MESSAGE value="adding first python file" />
-    <MESSAGE value="adding" />
-    <option name="LAST_COMMIT_MESSAGE" value="adding" />
   </component>
 </project>
\ No newline at end of file
Index: Deepesh/PythonProgramming/PythonDataType/PythonDataTypePractice.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nPython Data Type\r\n\r\n1. Number Data Type\r\n    i).  Integer\r\n    ii). Float\r\n    iii). Complex\r\n\r\n2. Sequential Data Type\r\n    i). String\r\n    ii). List\r\n    iiI). Tuple\r\n\r\n3. Dictionary\r\n4. Set\r\n5. Boolean\r\n\"\"\"\r\n\r\n#### Integer Data Type ####\r\n\r\na = 20\r\nb = 54454\r\nc = 6456456345654645656546456\r\n\r\nprint(\"value a\", a, type(a))\r\nprint(\"value b\", b, type(b))\r\nprint(\"value c\", c, type(c))\r\n\r\n\"\"\"\r\nProperties of integer\r\n\r\n- Integer is immutable data type, once it is defined we can not change it.\r\n- Integer does not have any limit to defined the number. we can defined any long number\r\n  as integer.\r\n- Only whole will be consider as integer.\r\n\"\"\"\r\n\r\n###### Float Data Type #######\r\np = 0.0\r\nq = 23.22\r\nr = 65456456.5645645645645\r\ns = 6785.88899443243423\r\nt = 87686577878787658678678.56\r\n\r\nprint(\"value of p :\", p, type(p))  # 0.0 <class 'float'>\r\nprint(\"value of q :\", q, type(q))  # 23.22 <class 'float'>\r\nprint(\"value of r :\", r, type(r))  # 65456456.56456456 <class 'float'>\r\nprint(\"value of s :\", s, type(s))  # 6785.888994432435  <class 'float'>\r\nprint(\"value of t :\", t, type(t))  # 8.768657787878766e+22 <class 'float'>\r\n\r\n\"\"\"\r\nProperties of integer\r\n\r\n- Float is immutable data type, once it is defined we can not change it.\r\n- Float does not have any limit to defined the number. we can defined any long number\r\n  as Float. total number of digit would be around 17 for pointer\r\n- Only pointer values will be consider as float.\r\n\"\"\"\r\n\r\n\r\nprint(\"_\"*50)\r\n########### Complex data type ###########\r\n# x + yj\r\n# x = real number\r\n# y = imaginary number\r\n\r\nvar1 = 10 + 30j  # <class 'complex'>\r\nvar2= 30 + 4.4j  # <class 'complex'>\r\n\r\nvar3 = var1 + var2\r\nprint(\"value of var3 :\", var3) # value of var3 : (40+34.4j)\r\n\r\nprint(\"value of var1  :\", var1, type(var1))\r\nprint(\"value of var2  :\", var2, type(var2))\r\n\r\n\r\n###################### Sequentials data type ################\r\nprint(\"_\"*50)\r\n##### String Data Type #####\r\n\r\nstr1 = ''  # <class 'str'>\r\nstr2 = \"H\" # <class 'str'>\r\nstr3 = 'Hello How are you? hope you are doing good'\r\nstr4 = \"Good Morning to everyone, hope you are enjoying the Python\"\r\nstr5 = 'My name is \"Rahul\" and living is mumbai'\r\nstr6 = \"My name is 'Aditya' and living is mumbai\"\r\nstr7 = '''\r\nPython Programs or Python Programming Examples for \r\nbeginners and professionals with programs on basics, \r\ncontrols, loops, functions, native data types etc.\r\n\u200EPython Arithmetic Operations · \r\n\u200EHello Python Program · \u200EPython Area Of Triangle\r\n'''\r\n\r\nstr8 = \"\"\"\r\nPython Programs or Python Programming\r\nExamples for beginners and \r\nprofessionals with programs\r\non basics, controls, loops, \r\nfunctions, native data types etc.\r\n64356546456456 ^&^*&%^&%^&%&^%&%^$^%$\r\n\"\"\"\r\n\r\nprint(\"str1 :\", type(str1), str1)\r\nprint(\"_\"*50)\r\nprint(\"str2 :\", type(str2), str2)\r\nprint(\"_\"*50)\r\nprint(\"str3 :\", type(str3), str3)\r\nprint(\"_\"*50)\r\nprint(\"str4 :\", type(str4), str4)\r\nprint(\"_\"*50)\r\nprint(\"str5 :\", type(str5), str5)\r\nprint(\"_\"*50)\r\nprint(\"str6 :\", type(str6), str6)\r\nprint(\"_\"*50)\r\nprint(\"str7 :\", type(str7), str7)\r\n\r\nprint(\"_\"*50)\r\nprint(\"str8 :\", type(str8), str8)\r\nprint(\"_\"*50)\r\n\r\nvar1 = \"Hello\"\r\n\r\n\"\"\"\r\n 0   1   2   3  4  #+ve\r\n H   e   l   l  o\r\n-5  -4   -3  -2 -1 # -ve\r\n\"\"\"\r\nprint(var1[0])  # H\r\nprint(var1[-5]) # H\r\n\r\nprint(var1[-1]) # 0\r\nprint(var1[4])  # 0\r\n\r\n\r\nvar2 = \"Good Morning\"\r\n\r\nprint(var2[5])  # M\r\n\r\n\"\"\"\r\n# Properties of String\r\n- String is immutable data type, once it is defined we can not change it.\r\n- String follows both positive and negative indexing.\r\n- String can contains any type of value in double/single quote\r\n\"\"\"\r\n\r\nprint(\"_\"*50)\r\n############ List ############\r\n\r\nlist1 = [12, 4.5, 'hello', [3, 6 ,7]]\r\nprint(list1, type(list1))  # <class 'list'>\r\n\r\nlist2 = [\r\n    'Hello',            # 0 # -7\r\n    'Good Morning',     # 1 #-6\r\n    4534543,            # 2 # -5\r\n    56.66,              # 3 # -4\r\n    [4, 6, 7, 8],       # 4 # -3\r\n    (4, 7, 2, 22),      # 5 # -2\r\n    {'a': 123, 'b' : 345 }, # 6 # -1\r\n]\r\n\r\nprint(list2)\r\n\r\ns1 = list2[0]\r\nprint(s1, type(s1), s1[0]) # Hello <class 'str'> H\r\n\r\nprint(list2[6], type(list2[6]))  # {'a': 123, 'b': 345} <class 'dict'>\r\n\r\nprint(\"_\"*50)\r\nstr1 = \"Hello \\n Good \\n Morning\"\r\nprint(str1)\r\n\r\nstr2 = \"Hello \\t \\t Good \\t\\t Morning\"\r\nprint(str2)\r\n\r\nprint(\"_\"*50)\r\np = [44, 77, 88]\r\n\r\nlist3 = [4, 6, 7, [5, 7, 8], p, True]\r\n\r\np2 = list3[3]\r\nprint(\"p2 value :\", p2)\r\np2.append(100)\r\n\r\nprint(list3)\r\nprint(list3[-1])\r\n\r\n# get value of child list\r\nprint(list3[3][1]) # 7\r\n\r\n\"\"\"\r\nProperties of List\r\n\r\n- List if mutable data type, we can modify at any point of time\r\n- List follows positive and negative indexing as like string\r\n- List can contain any type of data like int, float, string, list, tuple, dict, set, Boolean.\r\n\"\"\"\r\n\r\nprint(\"_\"*50)\r\n########## Tuple #############\r\n\r\ntup1 = (2, 3.5, 'Hello', [3, 5, 6], (2, 3, 4), True)\r\n\r\nprint(tup1, type(tup1))\r\n\r\nprint(tup1[2])  # Hello\r\nvar1 = tup1[2]\r\nprint(var1, var1[0], type(var1))  # Hello H <class 'str'>\r\n\r\nprint(tup1[-2])  # (2, 3, 4)\r\nvar2 = tup1[-2]\r\nprint(var2, var2[1], type(var2))  # (2, 3, 4) 3 <class 'tuple'>\r\n\r\n\r\n\r\nlist1 = [4, 7, 8]\r\ntup2 = (4, 6, 7, list1)\r\nlist1.append(100)\r\n\r\nprint(\"tup2 :\", tup2)\r\n\r\n\"\"\"\r\n# properties of tuple\r\n- Tuple is immutable data type, we can not modify it once it is defined.\r\n- Tuple follows positive and negative indexing as like string and list\r\n- Tuple can store all type of data, int, float, string, list, tuple, dict, set, boolean\r\n- Tuple is faster than list.\r\n- We can store duplicate data in the tuple and list\r\n\"\"\"\r\n\r\nprint(\"_\"*50)\r\n############## Dictionary ##########\r\n# {'key' : 'value'}\r\n\r\ndict1 = {'Name' : 'Rahul', 'Age' : 25, 'Address' : 'Mumbai', 'Phone' : 45645645}\r\n\r\nprint(dict1, type(dict1))  # <class 'dict'>\r\n\r\nprint(dict1['Name'])\r\n\r\ndict1['email'] = 'rahul@gmail.com'\r\nprint(dict1)\r\n\r\n\"\"\"\r\n# properties of dictionary\r\n- Dictionary is mutable data type, we can modify at any point of time\r\n- Dictionary store the data in key value pair.\r\n- Dictionary only contains unique key, duplicate keys are not allowed.\r\n- Dictionary can contain duplicate values\r\n- Only immutable data type can key in the dictionary e.g int, float, string\r\n  tuple, boolean\r\n  \r\n- All type of data can be value in the dictionary, e.g int, float, string, list, \r\n  tuple, dictionary, set, boolean\r\n\"\"\"\r\nprint(\"_\"*50)\r\ndict2 = {\r\n    123 : 45.56,\r\n    44.12 : 'Good Morning',\r\n    \"Hello\" : [4, 7, 2, 8, 1],\r\n    # [1, 2, 3] : 456            # unhashable type: 'list'\r\n    (3, 6, 1) : {'a' : 123, 'b' : 456},\r\n    # {'a' : 111} : [45,66, 77]   # unhashable type: 'dict'\r\n    123 : 88888,\r\n\r\n}\r\n\r\nprint(\"dict2 :\", dict2)\r\n\r\nprint(dict2[44.12])  # Good Morning\r\n\r\nprint(dict2[(3, 6, 1)]['b']) # 456\r\n\r\n\r\nprint(\"_\"*50)\r\n######################## Set data Type ############################\r\nset1 = {True, False, 1, 0, 3.5, 'Python',4, 5, (5, 6, 7), 4, 3.5} # <class 'set'>\r\n\r\nprint(set1, type(set1)) # {(5, 6, 7), 1, 3.5, 4, 5, 500, 'Python'}\r\n\r\nset1.add(500)\r\n\r\nprint(set1)\r\n\r\n\"\"\"\r\n# Properties of set data type\r\n- set only store unique data, duplicate data is not allowed.\r\n- set can contains only immutable data type, like int, float, string, tuple, boolean\r\n- set store data in random order.\r\n- set does not follow any indexing/sequence\r\n\"\"\"\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Deepesh/PythonProgramming/PythonDataType/PythonDataTypePractice.py b/Deepesh/PythonProgramming/PythonDataType/PythonDataTypePractice.py
--- a/Deepesh/PythonProgramming/PythonDataType/PythonDataTypePractice.py	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ b/Deepesh/PythonProgramming/PythonDataType/PythonDataTypePractice.py	(date 1716625246562)
@@ -164,7 +164,6 @@
 
 s1 = list2[0]
 print(s1, type(s1), s1[0]) # Hello <class 'str'> H
-
 print(list2[6], type(list2[6]))  # {'a': 123, 'b': 345} <class 'dict'>
 
 print("_"*50)
@@ -275,7 +274,7 @@
 
 print("_"*50)
 ######################## Set data Type ############################
-set1 = {True, False, 1, 0, 3.5, 'Python',4, 5, (5, 6, 7), 4, 3.5} # <class 'set'>
+set1 = {1, True, False, 0, 3.5, 'Python',4, 5, (5, 6, 7), 4, 3.5} # <class 'set'>
 
 print(set1, type(set1)) # {(5, 6, 7), 1, 3.5, 4, 5, 500, 'Python'}
 
Index: archana/first_python_file.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/archana/first_python_file.py b/archana/first_python_file.py
new file mode 100644
--- /dev/null	(date 1716625246578)
+++ b/archana/first_python_file.py	(date 1716625246578)
@@ -0,0 +1,1 @@
+print("hello world")
\ No newline at end of file
Index: archana/test_File.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/archana/test_File.txt b/archana/test_File.txt
new file mode 100644
--- /dev/null	(date 1716625246579)
+++ b/archana/test_File.txt	(date 1716625246579)
@@ -0,0 +1,1 @@
+test_File.txt
\ No newline at end of file
Index: Deepesh/PythonProgramming/PythonIfElseCondition/PythonIfElsePractice.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Deepesh/PythonProgramming/PythonIfElseCondition/PythonIfElsePractice.py b/Deepesh/PythonProgramming/PythonIfElseCondition/PythonIfElsePractice.py
new file mode 100644
--- /dev/null	(date 1716625246567)
+++ b/Deepesh/PythonProgramming/PythonIfElseCondition/PythonIfElsePractice.py	(date 1716625246567)
@@ -0,0 +1,47 @@
+"""
+if <condition>:
+    code
+else:
+    code
+"""
+
+a = 60
+b = 60
+print(a == b)
+if a == b:
+    print("A and B both have same value")
+else:
+    print("A and B both have different value")
+
+
+# check given number is divisible by 3 or not
+num1 = 51
+
+if num1%3 == 0:
+    print("num1 is divisible by three")
+else:
+    print("num1 is not divisible by three")
+
+print("_"*50)
+
+# program to check given number is even or odd
+print("_"*50)
+input_value = input("Please enter the value :")
+print(input_value, type(input_value))
+
+if int(input_value)%2 == 0:
+    print("This is even number")
+else :
+    print("This is odd number.")
+
+
+# program to check the given number is divisible by 3 and 7
+print("_"*40)
+n1 = 20
+if n1%3 == 0 and n1%7 == 0:
+    print("n1 is divisible by three and seven")
+else:
+    print("n1 is not divisible by three and seven")
+
+
+print("sangeeta")
Index: Deepesh/PythonProgramming/PythonDataType/PythonDataTypeConversion.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Deepesh/PythonProgramming/PythonDataType/PythonDataTypeConversion.py b/Deepesh/PythonProgramming/PythonDataType/PythonDataTypeConversion.py
new file mode 100644
--- /dev/null	(date 1716625246562)
+++ b/Deepesh/PythonProgramming/PythonDataType/PythonDataTypeConversion.py	(date 1716625246562)
@@ -0,0 +1,398 @@
+"""
+Python Data Type
+
+1. Number Data Type
+    i).  Integer
+    ii). Float
+    iii). Complex
+
+2. Sequential Data Type
+    i). String
+    ii). List
+    iiI). Tuple
+
+3. Dictionary
+4. Set
+5. Boolean
+"""
+
+############# Integer #####
+
+# int -> float
+
+var1 = 664
+v2 = float(var1)
+print(v2, type(v2))  # 664.0
+print(float(var1), type(float(var1)))
+
+print("_" * 40)
+
+####### int -> string  #######
+var3 = 4567
+s1 = str(var3)
+print(s1, type(s1), s1[1])
+
+##### int -> list ##### conversion is not possible
+"""
+var4 = 6789
+l1 = list(var4)  # TypeError: 'int' object is not iterable
+print(l1)
+"""
+
+### int -> tuple # conversion is not possible
+### int -> dict # # conversion is not possible
+### int -> set # conversion is not possible
+print("_" * 50)
+#### int -> boolean
+
+n1 = 0
+b1 = bool(n1)
+print(b1, type(b1))  # False <class 'bool'>
+
+n1 = 345
+b2 = bool(n1)
+print(b2, type(b2))  # True <class 'bool'>
+
+################## Float ###############
+print("_" * 50)
+
+##### float -> int ########
+
+v1 = 44.56
+n1 = int(v1)
+print(n1, type(n1))  # 44 <class 'int'>
+
+print("_" * 50)
+
+### Float -> String
+v2 = 456.78
+s2 = str(v2)
+print(s2, type(s2), s2[4], s2[3])  # 456.78 <class 'str'> 7 .
+
+print("_" * 50)
+#### Float -> List # conversion is not possible.
+#### Float -> Dict # # conversion is not possible
+#### Float -> Tuple # # conversion is not possible
+#### Float -> Set # # conversion is not possible
+
+#### Float -> Boolean #
+
+a1 = 0.0
+b1 = bool(a1)
+print(b1, type(b1))  # False <class 'bool'>
+
+a2 = 56.789
+b2 = bool(a2)
+print(b2, type(b2))  # True <class 'bool'>
+
+################# String Datatype Conversion ################
+
+print("_" * 40)
+### string -> int ###
+
+#### Can not convert word into number ###
+"""
+str1 = "Hello"
+n1 = int(str1)  # invalid literal for int() with base 10: 'Hello'
+print(n1, type(n1))
+"""
+
+#### IF string is holding only number then the conversion is possible
+
+str2 = "56546456456"
+n2 = int(str2)
+print(n2, type(n2))  # 56546456456 <class 'int'>
+print(n2 * 2)  # 113092912912
+
+print("_" * 40)
+######## string -> float ########
+
+"""
+str_a = "Python Programming"
+f1 = float(str_a)  # could not convert string to float: 'Python Programming'
+print(f1)
+"""
+
+## string holding only float value then we can convert ##
+str_b = "45"
+f2 = float(str_b)
+print(f2, type(f2))  # 45.68 <class 'float'>
+
+#### string -> list #######
+print("_" * 50)
+str3 = "Python"
+list1 = list(str3)
+print(list1, type(list1))
+# ['P', 'y', 't', 'h', 'o', 'n'] <class 'list'>
+
+#### string -> Tuple #######
+print("_" * 50)
+str4 = "Programming"
+tup2 = tuple(str4)
+print(tup2, type(tup2))
+# ('P', 'r', 'o', 'g', 'r', 'a', 'm', 'm', 'i', 'n', 'g') <class 'tuple'>
+
+
+#### string -> Dictionary #### direct conversion is not possible
+print("_" * 50)
+
+"""
+str4 = "Grow TechMind"
+d1 = dict(str4)
+print(d1)
+# ValueError: dictionary update sequence element #0 has length 1; 2 is required
+"""
+
+import json
+
+str5 = '{"Name" : "Rahul", "age" : 25, "address" : "Pune"}'
+dict2 = json.loads(str5)
+print(dict2, dict2['Name'])
+# {'Name': 'Rahul', 'age': 25, 'address': 'Pune'} Rahul
+
+### string -> set ####
+print("_" * 50)
+
+str5 = "Python Programming"
+set1 = set(str5)
+print(set1, type(set1))
+# {'o', 'm', 'a', 'h', 'i', 'P', 'y', 'g', 'r', ' ', 't', 'n'} <class 'set'>
+
+### string -> Boolean ####
+print("_" * 50)
+
+str_p = ""
+b1 = bool(str_p)
+print(b1, type(b1))  # False <class 'bool'>
+
+str_q = "Hello"
+b2 = bool(str_q)
+print(b2, type(b2))  # True <class 'bool'>
+
+############# List Data Type Conversion ########
+
+### list -> int ### Conversion is not possible
+### list -> float ### Conversion is not possible
+
+### list -> String ###
+print("_" * 50)
+list_a = [4, 6, 8, 2]
+str1 = str(list_a)
+print(str1, type(str1), str1[0], str1[1], str1[-1])
+
+### list -> tuple ###
+print("_" * 50)
+list_b = [1, 6, 8, 2]
+tup2 = tuple(list_b)
+print(tup2, type(tup2), tup2[2])
+
+### list -> dict ###  conversion is not possible
+print("_" * 50)
+"""
+list_c = [3, 6, 11, 33]
+dict2 = dict(list_c)
+print(dict2)
+# TypeError: cannot convert dictionary update sequence element #0 to a sequence
+"""
+l1 = ['a', 'b', 'c', 'd']
+l2 = [2, 5, 8, 1]
+
+output = dict(zip(l1,  l2))
+print(output)
+#{'a': 2, 'b': 5, 'c': 8, 'd': 1}
+print(output['a'])  #2
+
+### list -> set ###
+print("_" * 50)
+list_d = [5, 8, 'a', 'b', 22, 55, 22, 8, 5,33.1, 7]
+set_d = set(list_d)
+print(set_d)
+# {33.1, 5, 7, 8, 'b', 22, 55, 'a'}
+
+#### list ->  boolean ###
+print("_" * 50)
+list_e = []
+b1 = bool(list_e)
+print(b1, type(b1))  # False <class 'bool'>
+
+list_f = [4, 7, 8]
+b2 = bool(list_f)
+print(b2, type(b2))  # True <class 'bool'>
+
+
+################# Tuple Datatype Conversion ###############
+
+### tuple-> int   ###### conversion is not possible
+# tup1 = ('4', '7', '8', '2')
+# result = "".join(tup1)
+# print(result, type(result), int(result))
+
+### tuple-> float ###### conversion is not possible
+### tuple-> string ######
+print("_"*40)
+tup_a = (4, 7, 2, 8)
+str_a = str(tup_a)
+print(str_a, type(str_a), str_a[0], str_a[4])
+# (4, 7, 2, 8) <class 'str'> ( 7
+
+
+### tuple -> list ###
+print("_"*40)
+tup_b = (5, 7, 2, 8)
+list_b = list(tup_b)
+print(list_b, type(list_b))
+# [5, 7, 2, 8] <class 'list'>
+
+### tuple -> dict ### direct conversion is not possible
+print("_"*40)
+
+tup_f = ('P','Q', 'R', 'S')
+tup_c = (4, 7, 2, 1)
+result = dict(zip(tup_f, tup_c))
+print(result)
+# {'P': 4, 'Q': 7, 'R': 2, 'S': 1}
+
+###### tuple -> set ######
+tup_d = (4, 7, 8, 'a', 11, 4, 7, 'a')
+set_d = set(tup_d)
+print(set_d)
+# {4, 7, 8, 11, 'a'}
+
+#### tuple -> boolean ###
+tup_e = ()
+bool_e = bool(tup_e)
+print(bool_e, type(bool_e))  # False <class 'bool'>
+
+
+tup_f = (4, 7, 8)
+bool_f = bool(tup_f)
+print(bool_f, type(bool_f))  # True <class 'bool'>
+
+
+################## Dictionary Data Type Conversion #########
+
+# dict -> int # conversion is not possible
+# dict -> float # conversion is not possible
+# dict -> string
+print("_"*40)
+dict1 = {'a' : 123, 'b' : 345}
+str1 = str(dict1)
+print(str1, type(str1), str1[2])  # {'a': 123, 'b': 345} <class 'str'> a
+
+#### dict -> list ####
+print("_"*50)
+dict2 = {'a' : 123, 'b' : 345, 'c' : 444}
+list1 = list(dict2)
+print(list1, type(list1)) # ['a', 'b', 'c'] <class 'list'>
+
+#### dict -> tuple ###
+print("_"*50)
+dict2 = {'a' : 123, 'b' : 345, 'c' : 444, 'd': 132}
+tupl1 = tuple(dict2)
+print(tupl1, type(tupl1))  # ('a', 'b', 'c', 'd') <class 'tuple'>
+
+
+#### dict -> set #######
+dict_a = {'a' : 123, 'b' : 345, 'c' : 444, 'd': 132}
+set1 = set(dict_a)
+print(set1, type(set1)) # {'d', 'c', 'a', 'b'} <class 'set'>
+
+#### dict -> Boolean ###
+
+dict_b = {'P': 123, 'Q': 456, 'R': 333}
+b1 = bool(dict_b)
+print(b1, type(b1))  # True <class 'bool'>
+
+dict_c = {}
+b2 = bool(dict_c)
+print(b2, type(b2))  # False <class 'bool'>
+
+print(dict_b.values())
+
+
+################## Set Data Type #########################
+# set -> int # conversion is not possible
+# set -> float # conversion is not possible
+
+### set -> string ####
+print("_"*50)
+set1 = {4, 7, 2, 5, 1, 4, 'a', 'b'}
+s1= str(set1)
+print(s1, type(s1), s1[0], s1[1]) # {1, 2, 4, 5, 7, 'a', 'b'} <class 'str'> { 1
+
+
+#### set -> list ###
+
+set2 = {4, 7, 2, 7, 12, 2, 4}
+list1 = list(set2)
+print(list1, type(list1))  # [2, 4, 12, 7] <class 'list'>
+
+### set -> tuple ###
+set3 = {4, 7, 2, 7, 12, 2, 4}
+tup2 = tuple(set3)
+print(tup2, type(tup2))  # (2, 4, 12, 7) <class 'tuple'>
+
+### set -> dict ### # conversion is not possible
+"""
+set4 = {4, 7, 2, 7, 11, 44}
+d1 = dict(set4)
+print(d1)
+"""
+# TypeError: cannot convert dictionary update sequence element #0 to a sequence
+
+### set -> boolean ###
+
+set4 = set()
+b1 = bool(set4)
+print(b1, type(b1))  # False <class 'bool'>
+
+set5 = {4, 6, 2, 6, 7, 2}
+b2 = bool(set5)
+print(b2, type(b2))  # True <class 'bool'>
+
+################### Boolean Data Type Conversion ##########
+# bool -> int
+print("_"*50)
+b1 = True
+n1 = int(b1)
+print(n1, type(n1))  # 1 <class 'int'>
+
+######## bool -> float ##########
+print("_"*50)
+bool2 = False
+b2 = float(bool2)
+print(b2, type(b2))  # 0.0 <class 'float'>
+
+#### Bool - string ###
+b3 = True
+s1 = str(b3)
+print(s1, type(s1), s1[0])  # True <class 'str'> T
+
+#### Bool - List ### : conversion  is not possible
+"""
+b4 = False
+l4 = list(b4)
+print(l4)
+"""
+# TypeError: 'bool' object is not iterable
+
+### bool -> tuple ###  : conversion  is not possible
+#### bool -> dict #### : conversion  is not possible
+"""
+b5 = False
+di1 = dict(b5)
+print(di1, type(di1))
+"""
+#### bool -> set #### : conversion  is not possible
+
+b5 = False
+di1 = dict(b5)
+
+
+
+
+
+
+
+
+
Index: keerthi/python Datatypes/datatype.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/keerthi/python Datatypes/datatype.py b/keerthi/python Datatypes/datatype.py
new file mode 100644
--- /dev/null	(date 1716625246579)
+++ b/keerthi/python Datatypes/datatype.py	(date 1716625246579)
@@ -0,0 +1,192 @@
+#integer:
+"""
+Python Data Type
+
+1. Number Data Type
+    i).  Integer
+    ii). Float
+    iii). Complex
+
+2. Sequential Data Type
+    i). String
+    ii). List
+    iiI). Tuple
+
+3. Dictionary
+4. Set
+5. Boolean
+"""
+#integer
+"""
+Properties of integer
+
+- Integer is immutable data type, once it is defined we can not change it.
+- Integer does not have any limit to defined the number. we can defined any long number
+  as integer.
+- Only whole will be consider as integer.
+"""
+
+a=78
+b="helloworld"
+c=3544658798090567689704656576
+
+print("value of a:", type(a))
+print("value of b:", type(b))
+print("value of c:", type(c))
+
+a=7.8
+b=12.8
+c=3445667.687989000243356
+print("value of a:", type(a))
+print("value of b:", type(b))
+print("value of c:", type(c))
+
+#float data type
+a=2.0
+b=90.7909
+d=-29.789
+e=67780099.89090999090
+f=34565.7988099055879898675766
+g=989008788788677777.6878898788
+print("value of a:", a,type(a))
+print("value of b:", b,type(b))
+print("value of c:", c, type(c))
+print("value of d:", d,type(d))
+print("value of e:", e,type(e))
+print("value of f:", f,type(f))
+print("value of g:", g,type(g))
+
+print("*"*50)
+#complex numbers
+#a+bi
+#a=realnumber
+#b=imaginary
+
+a=20+10j
+b=30+3.8j
+c=a+b
+print("value of c:",c)
+print("*"*50)
+var1=10+30j
+var2=30+50j
+var3=var1+var2
+print("value of var3:", var3)
+print("value of var1:", var1,type(var1))
+print("value of var2:",var2,type(var2))
+
+print('-'*50)
+####sequential datatype
+"""
+# Properties of String
+- String is immutable data type, once it is defined we can not change it.
+- String follows both positive and negative indexing.
+- String can contains any type of value in double/single quote
+"""
+
+str1='' #if we give '' it will consider this is a string
+str2='678'
+str3="helo"
+str4="this is my pythonfirst program"
+str5="i live in a SD road,near by the school."
+str6='"hai, how are you"'
+str7='''
+Python Programs or Python Programming Examples for 
+beginners and professionals with programs on basics, 
+controls, loops, functions, native data types etc.
+‎Python Arithmetic Operations · 
+‎Hello Python Program · ‎Python Area Of Triangle
+'''
+str8='''
+Python Programs or Python Programming
+Examples for beginners and 
+professionals with programs
+on basics, controls, loops, 
+functions, native data types etc.
+64356546456456 ^&^*&%^&%^&%&^%&%^$^%$
+'''
+print("str1 of str:",type(str1),str1)
+print("-"*50)
+print("str2 of str:",type(str2),str2)
+print("_"*50)
+print("str3 of str:",type(str3),str3)
+print("_"*50)
+print("str4 of str:",type(str4),str4)
+print("-"*50)
+print("str5 of str:",type(str5),str5)
+print("_"*50)
+print("str6 of str:",type(str6),str6)
+print("_"*50)
+print("str7 of str:",type(str7),str7)
+print("_"*50)
+print("str8 of str:",type(str8),str8)
+
+var1="python"
+#  p   y   t   h   o   n
+#  0   1   2   3   4   5
+# -6  -5  -4  -3  -2  -1
+
+# print(var1[2,1])
+# print(var1[-3])
+
+var2="Welcome"
+print(var2[1])
+print(var2[-5])
+
+var3="35465"
+print(var3[1])
+print(var3[-2])
+
+# ***********List**********"""
+# """
+# Properties of List
+#
+# - List if mutable data type, we can modify at any point of time
+# - List follows positive and negative indexing as like string
+# - List can contain any type of data like int, float, string, list, tuple, dict, set, Boolean.
+# """
+
+list1 = [1,2,3,[4,5,6],"welcome"]
+print(list1, type(list1))
+
+list2=[3,5,8,"hello",(4,5,6)]
+print(list2, type(list2))
+
+list3=[
+    "hello",
+    "This is hello world",
+    2.3,4.6,7.9,
+    [2,3,4,5],
+    (6,7,8,9,10),
+    {'a':112,'b':113,'end':'3578'}
+]
+print(list3,type(list3),list3[4])
+
+s1=list3[0]
+print(s1, type(s1),s1[0])
+print(list3[-1],type(list3[-1]))
+
+print('_'*50)
+str1="hello \n welcome to \n python"
+print(str1, type(str1))
+
+str2="Good \t\t morning \t\t hyderabad"
+print(str2, type(str2))
+
+print('_'*50)
+
+p=[2,3,4]
+list1=[7,8,9,[8,9,6],p,0]
+# print(list1, type(list1))
+p2=list1[4]
+print("value of p2:",p2)
+p2.append(100)
+
+
+
+
+
+
+
+
+
+
Index: Subramanyam/practice2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Subramanyam/practice2.py b/Subramanyam/practice2.py
new file mode 100644
--- /dev/null	(date 1716625246567)
+++ b/Subramanyam/practice2.py	(date 1716625246567)
@@ -0,0 +1,134 @@
+#
+
+word = input("Enter the words :")
+combination = 0
+character = len(word)
+
+while character>0:
+    combination+=character
+    character -=1
+
+print("Total combination without repetaation: ",combination)
+
+
+# how to display those combination word in print statement
+
+# Python program to generate random numbers.
+
+import random
+c = 0
+for i in range(25):
+    print(random.random())   # how to get sum of output
+    c+=i
+print('#'*100)
+print("Total",c)
+#  Python program to generate a random string with a specific length.
+'''
+import string
+import random
+
+n = int(input("Enter the string :"))
+
+results = ''.join(random.choices(string.ascii_letters,k=n))
+
+print("The random generated string are: ",str(results))
+'''
+
+# Python program to get the current date.
+
+from datetime import datetime
+
+dt = datetime.now()
+
+print("Current date is: ",dt)
+
+#Python program to get the current date.
+'''
+num = int(input("Enter the number : "))
+
+print(f"Binary form of {num} is",'{0:b}'.format(int(num))) # why we used "f" here and is the use of taht "f"?
+
+name = input("Enter the name : ")
+loc = input("Enter the location : ")
+age = int(input("Enter the age : "))
+
+print(f'my Name is {name} , I am from {loc} and I {age} years old')
+'''
+
+# Python program to find the sum of natural numbers.
+
+'''
+num = int(input("Eeter the number: "))
+total = 0
+
+for i in range(1,num+1):
+    total+=i
+print("total",total)
+'''
+
+# Python program to find the sum of natural numbers.
+'''
+num1 = int(input("Enter the number1: "))
+num2 = int(input("Enter the number2: "))
+
+if num1>num2:
+    smaller = num2
+else:
+    smaller = num1
+
+for i in range(i,smaller+1):
+    if((num1%i==0)and(num2%i==0)):
+        hcf=i
+
+print(f"H.C.F of {num1} and {num2}:{hcf}")
+
+
+if num1>num2:
+    greater = num1
+else:
+    greater = num2
+
+while(True):
+    if((greater % num1 == 0)and (greater % num2 ==0 )):
+        lcm = greater
+        break
+    greater+=1
+
+print(f"L.C.M is {num1} and {num2}: {lcm}")
+'''
+
+# Python program to find the square root of a number.
+
+
+import math
+
+n = 256
+
+print(math.sqrt(n))
+
+# Python program to calculate the volume of a sphere.
+# Formula = (4/3*pi*r^2)
+'''
+r = int(input("Enter the number: "))
+
+volume = 4/3*(3.14*r**2)
+
+print("Volume of sphere",volume)
+'''
+# Python program to perform mathematical operations on two numbers.
+
+num1 = float(input("Enter number 1: "))
+num2 = float(input("Enter number 2: "))
+operation = input("Enter operation of your choice: ")
+
+if operation == "+":
+    print(num1+num2)
+elif operation == "-":
+    print(num1-num2)
+elif operation == "/":
+    print(num1/num2)
+elif operation == "*":
+    print(num1*num2)
+else:
+    print("Invalid operation")
+'''
\ No newline at end of file
Index: Subramanyam/practice3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Subramanyam/practice3.py b/Subramanyam/practice3.py
new file mode 100644
--- /dev/null	(date 1716625246574)
+++ b/Subramanyam/practice3.py	(date 1716625246574)
@@ -0,0 +1,31 @@
+# Python program to check for the anagram. print the iteration
+word = input("Enter the words :")
+combination = 0
+character = len(word)
+
+while character>0:
+    combination+=character
+    print(combination)
+    character -=1
+
+print("Total combination without repetaation: ",combination)
+#  Python program to generate random numbers. sum of random value ---0.00###
+import random
+sum_val = 0
+for i in range(5):
+    val = random.random()
+    print(val)
+    sum_val += val
+
+print("sum value  :", sum_val)
+
+#  Python program to generate random numbers. sum of random value ---10,12,14 ###
+
+import random
+sum_val = 0
+for i in range(5):
+    val = random.randint(30, 50)
+    print(val)
+    sum_val += val
+
+print("sum value  :", sum_val)
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55__Changes_.xml
new file mode 100644
--- /dev/null	(date 1716828457884)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55__Changes_.xml	(date 1716828457884)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_20-05-2024_20_55_[Changes]" date="1716218742551" recycled="false" toDelete="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 20-05-2024 20:55 [Changes]" />
+</changelist>
\ No newline at end of file
Index: Chetand/Seleniumpythonprogramming/PythonDataTypes/Python_Data_Type_first.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nPython Data Type\r\n\r\n1. Number Data Type\r\n    i).  Integer\r\n    ii). Float\r\n    iii). Complex\r\n\r\n2. Sequential Data Type\r\n    i). String\r\n    ii). List\r\n    iiI). Tuple\r\n\r\n3. Dictionary\r\n4. Set\r\n5. Boolean\r\n\"\"\"\r\n\r\n#### Integer Data Type ####\r\n\r\na = 20\r\nb = 12322\r\nc = 623232323232323233\r\nprint(\"value a\", a, type(a))\r\nprint(\"value b\", b, type(b))\r\nprint(\"value c\", c, type(c))\r\n\r\n\"\"\"\r\nProperties of integer\r\n\r\n- Integer is immutable data type, once it is defined we can not change it.\r\n- Integer does not have any limit to defined the number. we can defined any long number\r\n  as integer.\r\n- Only whole will be consider as integer.\r\n\"\"\"\r\n\r\n###### Float Data Type #######\r\np = 0.0\r\nq = 12.34\r\nr = 767676.323232323\r\ns = 6565.56464365757\r\nt = 83434545656.56\r\n\r\nprint(\"value of p :\", p, type(p))  # 0.0 <class 'float'>\r\nprint(\"value of q :\", q, type(q))  # 23.22 <class 'float'>\r\nprint(\"value of r :\", r, type(r))  # 65456456.56456456 <class 'float'>\r\nprint(\"value of s :\", s, type(s))  # 6785.888994432435  <class 'float'>\r\nprint(\"value of t :\", t, type(t))  # 8.768657787878766e+22 <class 'float'>\r\n\r\n\"\"\"\r\nProperties of integer\r\n\r\n- Float is immutable data type, once it is defined we can not change it.\r\n- Float does not have any limit to defined the number. we can defined any long number\r\n  as Float. total number of digit would be around 17 for pointer\r\n- Only pointer values will be consider as float.\r\n\"\"\"\r\n\r\n\r\nprint(\"_\"*50)\r\n########### Complex data type ###########\r\n# x + yj\r\n# x = real number\r\n# y = imaginary number\r\n\r\nvar1 = 90 + 40j  # <class 'complex'>\r\nvar2= 40 + 5.4j  # <class 'complex'>\r\n\r\nvar3 = var1 + var2\r\nprint(\"value of var3 :\", var3) # value of var3 : (40+34.4j)\r\n\r\nprint(\"value of var1  :\", var1, type(var1))\r\nprint(\"value of var2  :\", var2, type(var2))\r\n\r\n\r\n###################### Sequentials data type ################\r\nprint(\"_\"*60)\r\n##### String Data Type #####\r\n\r\nstr1 = ''  # <class 'str'>\r\nstr2 = \"H\" # <class 'str'>\r\nstr3 = 'Hello How are you? hope you are doing good'\r\nstr4 = \"Good Morning to everyone, hope you are enjoying the Python\"\r\nstr5 = 'My name is \"Rahul\" and living is mumbai'\r\nstr6 = \"My name is 'Aditya' and living is mumbai\"\r\nstr7 = '''\r\nPython Programs or Python Programming Examples for \r\nbeginners and professionals with programs on basics, \r\ncontrols, loops, functions, native data types etc.\r\n\u200EPython Arithmetic Operations · \r\n\u200EHello Python Program · \u200EPython Area Of Triangle\r\n'''\r\n\r\nstr8 = \"\"\"\r\nPython Programs or Python Programming\r\nExamples for beginners and \r\nprofessionals with programs\r\non basics, controls, loops, \r\nfunctions, native data types etc.\r\n64356546456456 ^&^*&%^&%^&%&^%&%^$^%$\r\n\"\"\"\r\n\r\nprint(\"str1 :\", type(str1), str1)\r\nprint(\"_\"*50)\r\nprint(\"str2 :\", type(str2), str2)\r\nprint(\"_\"*50)\r\nprint(\"str3 :\", type(str3), str3)\r\nprint(\"_\"*50)\r\nprint(\"str4 :\", type(str4), str4)\r\nprint(\"_\"*50)\r\nprint(\"str5 :\", type(str5), str5)\r\nprint(\"_\"*50)\r\nprint(\"str6 :\", type(str6), str6)\r\nprint(\"_\"*50)\r\nprint(\"str7 :\", type(str7), str7)\r\n\r\nprint(\"_\"*50)\r\nprint(\"str8 :\", type(str8), str8)\r\nprint(\"_\"*50)\r\n\r\nvar1 = \"Hello\"\r\n\r\n\"\"\"\r\n 0   1   2   3  4  #+ve\r\n H   e   l   l  o\r\n-5  -4   -3  -2 -1 # -ve\r\n\"\"\"\r\nprint(var1[0])  # H\r\nprint(var1[-5]) # H\r\n\r\nprint(var1[-1]) # 0\r\nprint(var1[4])  # 0\r\n\r\n\r\nvar2 = \"Good Morning\"\r\n\r\nprint(var2[5])  # M\r\n\r\n\"\"\"\r\n# Properties of String\r\n- String is immutable data type, once it is defined we can not change it.\r\n- String follows both positive and negative indexing.\r\n- String can contains any type of value in double/single quote\r\n\"\"\"\r\n\r\nprint(\"_\"*50)\r\n############ List ############\r\n\r\nlist1 = [12, 4.5, 'hello', [3, 6 ,7]]\r\nprint(list1, type(list1))  # <class 'list'>\r\n\r\nlist2 = [\r\n    'Hello',            # 0 # -7\r\n    'Good Morning',     # 1 #-6\r\n    4534543,            # 2 # -5\r\n    56.66,              # 3 # -4\r\n    [4, 6, 7, 8],       # 4 # -3\r\n    (4, 7, 2, 22),      # 5 # -2\r\n    {'a': 123, 'b' : 345 }, # 6 # -1\r\n]\r\n\r\nprint(list2)\r\n\r\ns1 = list2[0]\r\nprint(s1, type(s1), s1[0]) # Hello <class 'str'> H\r\n\r\nprint(list2[6], type(list2[6]))  # {'a': 123, 'b': 345} <class 'dict'>\r\n\r\nprint(\"_\"*50)\r\nstr1 = \"Hello \\n Good \\n Morning\"\r\nprint(str1)\r\n\r\nstr2 = \"Hello \\t \\t Good \\t\\t Morning\"\r\nprint(str2)\r\n\r\nprint(\"_\"*50)\r\np = [44, 77, 88]\r\n\r\nlist3 = [4, 6, 7, [5, 7, 8], p, True]\r\n\r\np2 = list3[3]\r\nprint(\"p2 value :\", p2)\r\np2.append(100)\r\n\r\nprint(list3)\r\nprint(list3[-1])\r\n\r\n# get value of child list\r\nprint(list3[3][1]) # 7\r\n\r\n\"\"\"\r\nProperties of List\r\n\r\n- List if mutable data type, we can modify at any point of time\r\n- List follows positive and negative indexing as like string\r\n- List can contain any type of data like int, float, string, list, tuple, dict, set, Boolean.\r\n\"\"\"\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Chetand/Seleniumpythonprogramming/PythonDataTypes/Python_Data_Type_first.py b/Chetand/Seleniumpythonprogramming/PythonDataTypes/Python_Data_Type_first.py
--- a/Chetand/Seleniumpythonprogramming/PythonDataTypes/Python_Data_Type_first.py	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ b/Chetand/Seleniumpythonprogramming/PythonDataTypes/Python_Data_Type_first.py	(date 1716625246561)
@@ -195,5 +195,95 @@
 - List follows positive and negative indexing as like string
 - List can contain any type of data like int, float, string, list, tuple, dict, set, Boolean.
 """
+print("_" * 50)
+########## Tuple #############
+
+tup1 = (2, 3.5, 'Hello', [3, 5, 6], (2, 3, 4), True)
+
+print(tup1, type(tup1))
+
+print(tup1[2])  # Hello
+var1 = tup1[2]
+print(var1, var1[0], type(var1))  # Hello H <class 'str'>
+
+print(tup1[-2])  # (2, 3, 4)
+var2 = tup1[-2]
+print(var2, var2[1], type(var2))  # (2, 3, 4) 3 <class 'tuple'>
+
+list1 = [4, 7, 8]
+tup2 = (4, 6, 7, list1)
+list1.append(100)
+
+print("tup2 :", tup2)
+
+"""
+# properties of tuple
+- Tuple is immutable data type, we can not modify it once it is defined.
+- Tuple follows positive and negative indexing as like string and list
+- Tuple can store all type of data, int, float, string, list, tuple, dict, set, boolean
+- Tuple is faster than list.
+- We can store duplicate data in the tuple and list
+"""
+
+print("_" * 50)
+############## Dictionary ##########
+# {'key' : 'value'}
+
+dict1 = {'Name': 'Rahul', 'Age': 25, 'Address': 'Mumbai', 'Phone': 45645645}
+
+print(dict1, type(dict1))  # <class 'dict'>
+
+print(dict1['Name'])
+
+dict1['email'] = 'rahul@gmail.com'
+print(dict1)
+
+"""
+# properties of dictionary
+- Dictionary is mutable data type, we can modify at any point of time
+- Dictionary store the data in key value pair.
+- Dictionary only contains unique key, duplicate keys are not allowed.
+- Dictionary can contain duplicate values
+- Only immutable data type can key in the dictionary e.g int, float, string
+  tuple, boolean
+
+- All type of data can be value in the dictionary, e.g int, float, string, list, 
+  tuple, dictionary, set, boolean
+"""
+print("_" * 50)
+dict2 = {
+    123: 45.56,
+    44.12: 'Good Morning',
+    "Hello": [4, 7, 2, 8, 1],
+    # [1, 2, 3] : 456            # unhashable type: 'list'
+    (3, 6, 1): {'a': 123, 'b': 456},
+    # {'a' : 111} : [45,66, 77]   # unhashable type: 'dict'
+    123: 88888,
+
+}
+
+print("dict2 :", dict2)
+
+print(dict2[44.12])  # Good Morning
+
+print(dict2[(3, 6, 1)]['b'])  # 456
+
+print("_" * 50)
+######################## Set data Type ############################
+set1 = {True, False, 1, 0, 3.5, 'Python', 4, 5, (5, 6, 7), 4, 3.5}  # <class 'set'>
+
+print(set1, type(set1))  # {(5, 6, 7), 1, 3.5, 4, 5, 500, 'Python'}
+
+set1.add(500)
+
+print(set1)
+
+"""
+# Properties of set data type
+- set only store unique data, duplicate data is not allowed.
+- set can contains only immutable data type, like int, float, string, tuple, boolean
+- set store data in random order.
+- set does not follow any indexing/sequence
+"""
 
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1716625246557)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55_[Changes]/shelved.patch	(date 1716625246557)
@@ -0,0 +1,91 @@
+Index: .idea/workspace.xml
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
+<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"70f918f6-0cf5-4e0a-8f5f-6a81a6d5d8af\" name=\"Changes\" comment=\"addind second file\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Sushmita/secoond.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Sushmita/secoond.py\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2gYcAR5wvfp8U492IIZWC1c8UQy\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/GitRepo/Sushmitashastri23/Newpython/GTM_PS_Batch04&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"secoond\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"GTM_PS_Batch04\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/Sushmita\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/Sushmita/secoond.py\" />\r\n      <option name=\"PARAMETERS\" value=\"\" />\r\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\r\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\r\n      <option name=\"MODULE_MODE\" value=\"false\" />\r\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\r\n      <option name=\"INPUT_FILE\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Python.secoond\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"70f918f6-0cf5-4e0a-8f5f-6a81a6d5d8af\" name=\"Changes\" comment=\"\" />\r\n      <created>1715877807279</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1715877807279</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"adding first file\">\r\n      <created>1715879394502</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715879394502</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"remove files\">\r\n      <created>1715879517910</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715879517910</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"addind second file\">\r\n      <created>1715879668990</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1715879668990</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"4\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"adding first file\" />\r\n    <MESSAGE value=\"remove files\" />\r\n    <MESSAGE value=\"addind second file\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"addind second file\" />\r\n  </component>\r\n</project>
+===================================================================
+diff --git a/.idea/workspace.xml b/.idea/workspace.xml
+--- a/.idea/workspace.xml	
++++ b/.idea/workspace.xml	
+@@ -1,9 +1,11 @@
+ <?xml version="1.0" encoding="UTF-8"?>
+ <project version="4">
++  <component name="AutoImportSettings">
++    <option name="autoReloadType" value="SELECTIVE" />
++  </component>
+   <component name="ChangeListManager">
+-    <list default="true" id="70f918f6-0cf5-4e0a-8f5f-6a81a6d5d8af" name="Changes" comment="addind second file">
+-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+-      <change beforePath="$PROJECT_DIR$/Sushmita/secoond.py" beforeDir="false" afterPath="$PROJECT_DIR$/Sushmita/secoond.py" afterDir="false" />
++    <list default="true" id="70f918f6-0cf5-4e0a-8f5f-6a81a6d5d8af" name="Changes" comment="adding multiple files">
++      <change afterPath="$PROJECT_DIR$/Subramanyam/division.py" afterDir="false" />
+     </list>
+     <option name="SHOW_DIALOG" value="false" />
+     <option name="HIGHLIGHT_CONFLICTS" value="true" />
+@@ -31,16 +33,42 @@
+     <option name="hideEmptyMiddlePackages" value="true" />
+     <option name="showLibraryContents" value="true" />
+   </component>
+-  <component name="PropertiesComponent">{
+-  &quot;keyToString&quot;: {
+-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+-    &quot;last_opened_file_path&quot;: &quot;C:/GitRepo/Sushmitashastri23/Newpython/GTM_PS_Batch04&quot;
++  <component name="PropertiesComponent"><![CDATA[{
++  "keyToString": {
++    "Python.division.executor": "Run",
++    "Python.secoond.executor": "Run",
++    "RunOnceActivity.OpenProjectViewOnStart": "true",
++    "RunOnceActivity.ShowReadmeOnStart": "true",
++    "git-widget-placeholder": "main",
++    "last_opened_file_path": "C:/GitRepo/Sushmitashastri23/Newpython/GTM_PS_Batch04"
+   }
+-}</component>
+-  <component name="RunManager">
++}]]></component>
++  <component name="RunManager" selected="Python.division">
++    <configuration name="division" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
++      <module name="GTM_PS_Batch04" />
++      <option name="ENV_FILES" value="" />
++      <option name="INTERPRETER_OPTIONS" value="" />
++      <option name="PARENT_ENVS" value="true" />
++      <envs>
++        <env name="PYTHONUNBUFFERED" value="1" />
++      </envs>
++      <option name="SDK_HOME" value="" />
++      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/Subramanyam" />
++      <option name="IS_MODULE_SDK" value="true" />
++      <option name="ADD_CONTENT_ROOTS" value="true" />
++      <option name="ADD_SOURCE_ROOTS" value="true" />
++      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/Subramanyam/division.py" />
++      <option name="PARAMETERS" value="" />
++      <option name="SHOW_COMMAND_LINE" value="false" />
++      <option name="EMULATE_TERMINAL" value="false" />
++      <option name="MODULE_MODE" value="false" />
++      <option name="REDIRECT_INPUT" value="false" />
++      <option name="INPUT_FILE" value="" />
++      <method v="2" />
++    </configuration>
+     <configuration name="secoond" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
+       <module name="GTM_PS_Batch04" />
++      <option name="ENV_FILES" value="" />
+       <option name="INTERPRETER_OPTIONS" value="" />
+       <option name="PARENT_ENVS" value="true" />
+       <envs>
+@@ -62,6 +90,7 @@
+     </configuration>
+     <recent_temporary>
+       <list>
++        <item itemvalue="Python.division" />
+         <item itemvalue="Python.secoond" />
+       </list>
+     </recent_temporary>
+@@ -114,6 +143,7 @@
+     <MESSAGE value="adding first file" />
+     <MESSAGE value="remove files" />
+     <MESSAGE value="addind second file" />
+-    <option name="LAST_COMMIT_MESSAGE" value="addind second file" />
++    <MESSAGE value="adding multiple files" />
++    <option name="LAST_COMMIT_MESSAGE" value="adding multiple files" />
+   </component>
+ </project>
+\ No newline at end of file
Index: Subramanyam/practice.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Median of given list\r\nlst = [45,60,61,66,70,77,80]\r\n\r\nlst.sort()\r\n\r\na = (len(lst))/2\r\n\r\nprint(lst[int(a)])\r\n\r\n\r\n# (a2 + b2 = c2)\r\n\r\n''' a =2\r\nb = 3\r\nc =a+b\r\n\r\nL = a**2+b**2\r\nR = c**2\r\nprint(L==R,L,R)\r\n'''\r\n\r\nimport math\r\ns1 = 2\r\ns2 = 3\r\n\r\nhypo = s1**2+s2**2\r\nprint(\"Hypotenious side: \",math.sqrt(hypo))\r\n\r\n# (a + b)2 = a^2 + b^2 + 2ab\r\n\r\na = 4\r\nb= 5\r\n\r\ny= a**2+b**2+2*a*b\r\nx=(a+b)**2\r\nprint(\"(a + b)2 = a^2 + b^2 + 2ab\",x==y,\"\\nvalve of (a+b)2 is :\",x,\"\\nvalve of a2+b2+2ab is :\",y )\r\n\r\nprint(\"$\"*100)\r\n\r\n# (a - b)2 = a^2 + b^2 - 2ab\r\n\r\na = 4\r\nb= 5\r\n\r\ny= a**2+b**2-2*a*b\r\nx=(a-b)**2\r\nprint(\"(a - b)2 = a^2 + b^2 - 2ab valve is :\",x==y)\r\n\r\nprint(\"&\"*100)\r\n\r\n# (a + b)3 = a3 + 3ab(a+b) + b3\r\n\r\nx = (a+b)**3\r\ny = a**3+b**3+3*a*b*(a+b)\r\n\r\nprint(\"(a + b)3 = a3 + 3ab(a+b) + b3 valve is :\",x==y)\r\n\r\nprint(\"@\"*100)\r\n# (a – b)3 = a3 – 3a2b + 3ab2 – b3\r\n\r\nx = (a-b)**3\r\n\r\ny = a**3-3*a**2*b+3*a*b**2-b**3\r\n\r\nprint(\"(a + b)3 = a3 + 3ab(a+b) + b3 valve is equal?:\",x==y,\" x valve is \",x, \"y vale is \",y)\r\n\r\n\r\n# area = a*a\r\n'''\r\narea = a*a\r\n\r\nprint(area)\r\n\r\nnum = float(input(\" Enter the valve for area :\"))\r\n\r\nprint(\"Area of a given :\",num**2)\r\n\r\n\"\"\" Formula = PI*r*r\r\nr = radius\r\nPI = 3.14 \"\"\"\r\n\r\nr = int(input(\"Enter the valve of radius\"))\r\nA = 3.14*r*r\r\nprint(\"Area of given radius 3,14*r2: \", A)\r\n\r\n# Python program to calculate the area of a cube.\r\n# Formula = 6*a*a\r\n\r\nC = int(input(\"Enter the cube valve: \"))\r\ncube = 6*C*C\r\n\r\nprint(\"Area the cube valve is :\", cube)\r\n\r\n# Python program to calculate the area of the cylinder.\r\n# Formula = 2*PI*r*h + 2*PI*r*r\r\n\r\nri = int(input(\"Enter the radius of the cylinder: \"))\r\nhi = int(input(\"Enter the hight of the cylinder: \"))\r\n\r\narea = (2*3.14*ri*hi)+(2*3.14*ri*ri)\r\n\r\nprint(\"Area of cylinder of given diamentions:\",area)\r\n\r\n#  given number is an Armstrong number or not.\r\n# Example: 153 = 1*1*1 + 5*5*5 + 3*3*3\r\n\r\nAr= ab = int(input(\" Enter the number \"))\r\nrev = 0\r\n\r\nwhile ab>0:\r\n    rem= ab%10\r\n    rev=rev +rem**3\r\n    ab =ab//10\r\n\r\nif rev ==Ar:\r\n    print(\"It is a armstrong number\")\r\nelse:\r\n    print(\"It is not a armstrong number\")\r\n'''\r\n# Python program to calculate simple interest.\r\n# Formula = P+(P/r)*t\r\n#  P = Principle Amount\r\n# r = Anual interest rate\r\n# t = time\r\n\r\np =4250000\r\nr= 12\r\nt=20\r\n\r\namount = p+(p/r)*t\r\nprint('Amount :',amount)\r\n# Python program to print the current date in the given format\r\n# Output: 2023 Jan 05\r\n\r\nimport datetime\r\ndate = datetime.datetime.now()\r\n\r\nprint (date.strftime (\" %Y %b %d \"))\r\n\r\n#  Python program to calculate days between 2 dates.\r\n# Input date : (2023, 1, 5) (2023, 1, 22)\r\n\r\nfrom datetime import date\r\n\r\n\r\nd1 = date(1993,12,3)\r\nd2 = date(2024,5,21)\r\n\r\nresult1 = (d2 - d1).days\r\nprint (\"Number of Days between the given Dates are: \", result1, \"days\")\r\n\r\nresult2 = ((d2 - d1).days)//30\r\nprint (\"Number of Days between the given Dates are: \", result2, \"months\")\r\n\r\nresult3 = ((d2 - d1).days)/365\r\nprint (\"Number of Days between the given Dates are: \", result3, \"years\")\r\n\r\n\r\n#  Python program to get the factorial of the given number.\r\n'''\r\nnum =n= int(input(\"Enter the number: \"))\r\nfact = 1\r\n\r\nwhile n >0:\r\n    fact *= n\r\n    n -=1\r\n\r\nprint(f\"factorial of {num}:{fact}\")\r\n'''\r\n''' Python program to reverse a given number.\r\n\r\nnum = int(input(\"Enter the number : \"))\r\n\r\nreverse = str(num)\r\n\r\nprint('Reverse :',reverse[::-1])\r\nprint(\"_\"*50)\r\n\r\n'''\r\n\r\n# Python program to get the Fibonacci series between 0 to 50.\r\n\r\nn1 = 0\r\nn2 = 1\r\n\r\ncount =0\r\n\r\nprint(\"sequence in:  \",end=\" \")\r\nwhile count<50:\r\n    print(n1,end=\" \")\r\n    n3 = n1+n2\r\n    n1=n2\r\n    n2=n3\r\n    count +=1\r\n\r\n\r\n\r\n\r\nprint(\"_\"*100)\r\n\r\n#  Python program to check given number is palindrome or not.\r\n'''\r\nn= num =int(input(\"Enter the number :\"))\r\n\r\nrev = 0\r\n\r\nwhile n>0:\r\n    rem = n%10\r\n    rev = rev *10 +rem\r\n    n=n//10\r\n\r\nif num==rev:\r\n    print(\"given number is a palindrome number\")\r\nelse:\r\n    print(\"given number is a not palindrome number\")\r\n\r\n'''\r\n#  Python program to calculate compound interest.\r\n# formula p((1+r/100)**n).\r\n\r\np = int(input(\"Enter principle amount: \"))\r\nr = float(input(\"Enter interest rate: \"))\r\nn = int(input(\"Enter number of years: \"))\r\n\r\namount = p*((1+r/100)**n)\r\n\r\nprint(\"Compoud interest: \",amount)
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Subramanyam/practice.py b/Subramanyam/practice.py
--- a/Subramanyam/practice.py	(revision db7fe2b6d449f1daf8b9c19d387e0d99286b41c5)
+++ b/Subramanyam/practice.py	(date 1716625246567)
@@ -179,13 +179,13 @@
 '''
 
 # Python program to get the Fibonacci series between 0 to 50.
-
+'''
 n1 = 0
 n2 = 1
 
 count =0
 
-print("sequence in:  ",end=" ")
+print("sequence in:  ",end="\n ",)
 while count<50:
     print(n1,end=" ")
     n3 = n1+n2
@@ -193,10 +193,11 @@
     n2=n3
     count +=1
 
+print("Bye")
 
+'''
 
 
-print("_"*100)
 
 #  Python program to check given number is palindrome or not.
 '''
@@ -218,10 +219,37 @@
 #  Python program to calculate compound interest.
 # formula p((1+r/100)**n).
 
+'''
 p = int(input("Enter principle amount: "))
 r = float(input("Enter interest rate: "))
 n = int(input("Enter number of years: "))
 
 amount = p*((1+r/100)**n)
 
-print("Compoud interest: ",amount)
\ No newline at end of file
+print("Compoud interest: ",amount) '''
+
+print("#"*100)
+
+# Python program to check the prime number.
+'''
+num1 = int(input("enter the valve :"))
+count = 0
+
+for i in range(1,num1+1):
+    if num1%i == 0:
+        count+=1
+
+if count == 2:
+    print(f"{num1} is a prime number")
+else:
+    print(f"{num1} is not a prime number")
+'''
+# Python program to check leap year.
+
+
+year = int(input("Enter a year: "))
+
+if (year%400 == 0 or year%100 != 0) and year%4 == 0:
+    print(f"{year} is a leap year")
+else:
+    print(f"{year} is not a leap year")
\ No newline at end of file
Index: Sushmita/pythonprogram/variables/variable.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sushmita/pythonprogram/variables/variable.py b/Sushmita/pythonprogram/variables/variable.py
new file mode 100644
--- /dev/null	(date 1716625246578)
+++ b/Sushmita/pythonprogram/variables/variable.py	(date 1716625246578)
@@ -0,0 +1,39 @@
+a=10
+b=1680.009755
+print(b,type(b))
+print(a ,type(a))
+
+c=1234782374900238778000002347877.98764
+print('c:',type(c))
+print(c)
+
+a='sushmita shaasik'
+print(a)
+
+str='''python is programming langauage 
+   it contains "list" ,"tuple"
+    '''
+print(str)
+
+print('*'*50)
+
+list=[1,2.4,'sum' , [1,2.5,'str1']]
+
+print(list,type(list))
+print(list[-1])        #[1, 2.5, 'str1']
+print(list[-1][-1])  #str1
+list[2]=78
+print(list)
+list.append(98)
+print(list)
+
+print('*'*50)
+list3 = [4, 6, 7, [5, 7, 8], 'p', True]
+
+p2 = list3[3]
+print("p2 value :", p2)
+p2.append(100)
+list3.append(98)
+print(list3)
+
+##########tuple######
Index: Sushmita/pythonprogram/Python Basic program/vowel.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sushmita/pythonprogram/Python Basic program/vowel.py b/Sushmita/pythonprogram/Python Basic program/vowel.py
new file mode 100644
--- /dev/null	(date 1716625246575)
+++ b/Sushmita/pythonprogram/Python Basic program/vowel.py	(date 1716625246575)
@@ -0,0 +1,7 @@
+vowel=['a' , 'e','i','o' ,'u']
+string =str(input("enter a string"))
+count=0
+for char in string :
+    if char  in vowel :
+       count +=1
+print (count)
Index: Mahila/pythonprogramming/pythondatasets/pythondatasets.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Mahila/pythonprogramming/pythondatasets/pythondatasets.py b/Mahila/pythonprogramming/pythondatasets/pythondatasets.py
new file mode 100644
--- /dev/null	(date 1716625246567)
+++ b/Mahila/pythonprogramming/pythondatasets/pythondatasets.py	(date 1716625246567)
@@ -0,0 +1,292 @@
+"""
+Python Data Type
+
+1. Number Data Type
+    i).  Integer
+    ii). Float
+    iii). Complex
+
+2. Sequential Data Type
+    i). String
+    ii). List
+    iiI). Tuple
+
+3. Dictionary
+4. Set
+5. Boolean
+"""
+print ("-"*50)
+##########################d
+#
+# Integer Data Type ####
+
+I1 = 40
+I2 = 345465
+
+print ("value of I1 :",I1 , type(I1))
+print ("value of I2 :",I2, type(I2))
+
+
+
+print ("-"*50)
+"""
+Properties of integer
+
+- Integer is immutable data type, once it is defined we can not change it.
+- Integer does not have any limit to defined the number. we can defined any long number
+  as integer.
+- Only whole will be consider as integer.
+"""
+print ("-"*50)
+############################Float Data Type #######
+f1 = 0.1
+f2 = 23.22
+f3 = 4876484.3764844545454
+f4 = 5.458476584734354657687879898900
+f5 = 23245454667576878798988989.345465
+
+print("value of f1 : ",f1,type(f1))  #0.1 <class 'float'>
+print("value of f2 : ",f2,type(f2))  #23.22 <class 'float'>
+print("value of f3 : ",f3,type(f3))  #4876484.376484455 <class 'float'>
+print("value of f4 : ",f4,type(f4))  #5.458476584734354 <class 'float'> around 17 numbers will be displayed.
+print("value of f5 : ",f5,type(f5))  #2.324545466757688e+25 <class 'float'> if it exceeds 17,shows as exponential.
+print ("-"*50)
+"""
+Properties of integer
+
+- Float is immutable data type, once it is defined we can not change it.
+- Float does not have any limit to defined the number. we can defined any long number
+  as Float. total number of digit would be around 17 for pointer
+- Only pointer values will be consider as float.
+"""
+
+print("_" * 50)
+########### Complex data type ###########
+# x + yj
+# x = real number
+# y = imaginary number
+
+c1 = 20 + 10j  # <class 'complex'>
+c2 = 30 + 4.4j  # <class 'complex'>
+
+c3 = c1 + c2
+print("value of c1 :",c1,type(c1))  #(20+10j) <class 'complex'>
+print("value of c2 :",c2,type(c2))  #(30+4.4j) <class 'complex'>
+print("value of c3 :",c3,type(c3))  #(50+14.4j) <class 'complex'>
+
+###################### Sequentials data type ################
+print("_" * 50)
+##### String Data Type - sequence of characters enclosed in a quotes ' & "  ################
+
+str1 = ''  # <class 'str'>   --- null value also inside cots,considered as string
+str2 = "2"  # <class 'str'>
+str3 = 'Hi using python for programming'    #string inside single cots
+str4 = "is learning python easy? yes it is.."  #string inside double cots
+str5 = 'My name is "Rahul" and living is mumbai' #string inside single cot with a word inside double cots.
+str6 = "My name is 'Aditya' and living is mumbai"
+#we cannot use same cots for both scenario. eg:if ur giving single cots for writing string then inside the string you can only use double cots.. otherwise it will throw error.
+str7 = '''
+Python Programs or Python Programming Examples for 
+beginners and professionals with programs on basics, 
+controls, loops, functions, native data types etc.
+‎Python Arithmetic Operations · 
+‎Hello Python Program · ‎Python Area Of Triangle
+'''
+
+str8 = """
+Python Programs or Python Programming
+Examples for beginners and 
+professionals with programs
+on basics, controls, loops, 
+functions, native data types etc.
+64356546456456 ^&^*&%^&%^&%&^%&%^$^%$
+"""
+str9 ="D"
+str10 ='hello python learner "rahul",hope you are doing well........'
+print("str1 :", type(str1), str1)
+print("_" * 50)
+print("str2 :", type(str2), str2)
+print("_" * 50)
+print("str3 :", type(str3), str3)
+print("_" * 50)
+print("str4 :", type(str4), str4)
+print("_" * 50)
+print("str5 :", type(str5), str5)
+print("_" * 50)
+print("str6 :", type(str6), str6)
+print("_" * 50)
+print("str7 :", type(str7), str7)
+print("_" * 50)
+print("str8 :", type(str8), str8)
+print("_" * 50)
+print("str9 :", type(str9), str9)
+print("_" * 50)
+print("str10 :", type(str10), str10)
+print("_" * 50)
+
+var1 = "Hello"
+
+"""
+ 0   1   2   3  4  #+ve
+ H   e   l   l  o
+-5  -4   -3  -2 -1 # -ve
+"""
+print(var1[0])  # H
+print(var1[-5])  # H
+
+print(var1[-1])  # 0
+print(var1[4])  # 0
+
+var2 = "Good Morning"
+
+print(var2[5])  # M
+
+"""
+# Properties of String
+- String is immutable data type, once it is defined we can not change it.
+- String follows both positive and negative indexing.
+- String can contains any type of value in double/single quote
+"""
+
+print("_" * 50)
+############ List ############
+
+list1 = [12, 4.5, 'hello', [3, 6, 7]]
+print(list1, type(list1))  # <class 'list'>
+
+list2 = [
+    'Hello',  # 0 # -7
+    'Good Morning',  # 1 #-6
+    4534543,  # 2 # -5
+    56.66,  # 3 # -4
+    [4, 6, 7, 8],  # 4 # -3
+    (4, 7, 2, 22),  # 5 # -2
+    {'a': 123, 'b': 345},  # 6 # -1
+]
+
+print(list2)
+
+s1 = list2[0]
+print(s1, type(s1), s1[0])  # Hello <class 'str'> H
+print(list2[6], type(list2[6]))  # {'a': 123, 'b': 345} <class 'dict'>
+
+print("_" * 50)
+str1 = "Hello \n Good \n Morning"
+print(str1)
+
+str2 = "Hello \t \t Good \t\t Morning"
+print(str2)
+
+print("_" * 50)
+p = [44, 77, 88]
+
+list3 = [4, 6, 7, [5, 7, 8], p, True]
+
+p2 = list3[3]
+print("p2 value :", p2)
+p2.append(100)
+
+print(list3)
+print(list3[-1])
+
+# get value of child list
+print(list3[3][1])  # 7
+
+"""
+Properties of List
+
+- List if mutable data type, we can modify at any point of time
+- List follows positive and negative indexing as like string
+- List can contain any type of data like int, float, string, list, tuple, dict, set, Boolean.
+"""
+
+print("_" * 50)
+########## Tuple #############
+
+tup1 = (2, 3.5, 'Hello', [3, 5, 6], (2, 3, 4), True)
+
+print(tup1, type(tup1))
+
+print(tup1[2])  # Hello
+var1 = tup1[2]
+print(var1, var1[0], type(var1))  # Hello H <class 'str'>
+
+print(tup1[-2])  # (2, 3, 4)
+var2 = tup1[-2]
+print(var2, var2[1], type(var2))  # (2, 3, 4) 3 <class 'tuple'>
+
+list1 = [4, 7, 8]
+tup2 = (4, 6, 7, list1)
+list1.append(100)
+
+print("tup2 :", tup2)
+
+"""
+# properties of tuple
+- Tuple is immutable data type, we can not modify it once it is defined.
+- Tuple follows positive and negative indexing as like string and list
+- Tuple can store all type of data, int, float, string, list, tuple, dict, set, boolean
+- Tuple is faster than list.
+- We can store duplicate data in the tuple and list
+"""
+
+print("_" * 50)
+############## Dictionary ##########
+# {'key' : 'value'}
+
+dict1 = {'Name': 'Rahul', 'Age': 25, 'Address': 'Mumbai', 'Phone': 45645645}
+
+print(dict1, type(dict1))  # <class 'dict'>
+
+print(dict1['Name'])
+
+dict1['email'] = 'rahul@gmail.com'
+print(dict1)
+
+"""
+# properties of dictionary
+- Dictionary is mutable data type, we can modify at any point of time
+- Dictionary store the data in key value pair.
+- Dictionary only contains unique key, duplicate keys are not allowed.
+- Dictionary can contain duplicate values
+- Only immutable data type can key in the dictionary e.g int, float, string
+  tuple, boolean
+
+- All type of data can be value in the dictionary, e.g int, float, string, list, 
+  tuple, dictionary, set, boolean
+"""
+print("_" * 50)
+dict2 = {
+    123: 45.56,
+    44.12: 'Good Morning',
+    "Hello": [4, 7, 2, 8, 1],
+    # [1, 2, 3] : 456            # unhashable type: 'list'
+    (3, 6, 1): {'a': 123, 'b': 456},
+    # {'a' : 111} : [45,66, 77]   # unhashable type: 'dict'
+    123: 88888,
+
+}
+
+print("dict2 :", dict2)
+
+print(dict2[44.12])  # Good Morning
+
+print(dict2[(3, 6, 1)]['b'])  # 456
+
+print("_" * 50)
+######################## Set data Type ############################
+set1 = {1, True, False, 0, 3.5, 'Python', 4, 5, (5, 6, 7), 4, 3.5}  # <class 'set'>
+
+print(set1, type(set1))  # {(5, 6, 7), 1, 3.5, 4, 5, 500, 'Python'}
+
+set1.add(500)
+
+print(set1)
+
+"""
+# Properties of set data type
+- set only store unique data, duplicate data is not allowed.
+- set can contains only immutable data type, like int, float, string, tuple, boolean
+- set store data in random order.
+- set does not follow any indexing/sequence
+"""
Index: Chetand/Seleniumpythonprogramming/PythonDataTypes/Python_data_type_conversion.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Chetand/Seleniumpythonprogramming/PythonDataTypes/Python_data_type_conversion.py b/Chetand/Seleniumpythonprogramming/PythonDataTypes/Python_data_type_conversion.py
new file mode 100644
--- /dev/null	(date 1716625246562)
+++ b/Chetand/Seleniumpythonprogramming/PythonDataTypes/Python_data_type_conversion.py	(date 1716625246562)
@@ -0,0 +1,11 @@
+# int ->> Float
+
+cd = 1233
+a = float(cd)
+print("Cd", a)
+
+# int ->> String
+
+cd = "Chetan"
+str1 = str(cd)
+print("string", str1, type(str1))
Index: Sunita/Datatype.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Sunita/Datatype.py b/Sunita/Datatype.py
new file mode 100644
--- /dev/null	(date 1716626248402)
+++ b/Sunita/Datatype.py	(date 1716626248402)
@@ -0,0 +1,144 @@
+
+var1 = 10
+print(var1)
+print(type(var1))
+print(id(var1))
+
+###############################
+var2 = "Good Morning"
+print(type(var2))
+print(var2)
+print(id(var2))
+
+# multiple variable with same value then their address will be same
+a = 15
+b = 15
+print(id(a)) # 140714657074040
+print(id(b)) # 140714657074040
+
+# assign multiple values to multiple variables at a time
+
+p, q, r = 50, 50, "Hello"
+print("value of p :", p, id(p))
+print("value of q :", q, id(q))
+print("value of r :", r, id(r))
+
+print("_"*50)
+# Assign one value to multiple variables
+x = y = z = 100
+print("value of x :", x, id(x))
+print("value of y :", y, id(y))
+print("value of z :", z, id(z))
+
+# Rules to declare variable
+# 1. There should not be space in variable name
+
+# var name = 100 : invalid
+var_name = 400
+var_name_variable_value = 500
+
+# 2. special character are not allowed in variable name
+
+# city%name = 'Mumbai' # invalid
+# cit_name  : valid
+# my&name = 'Rahul' # invalid
+# my_name # valid
+
+# 3. Number is not allowed in the begining of variable name
+
+# 123var = 500 # invalid
+# var_123 = 600 # valid
+
+# 4. There is no limitation for variable name, we can declare any length variable
+# abc_pqr_xyz_trtretireitreopitroeitr = 600 : valid
+
+# 5. The variable are case sensitive
+
+name = 'Rahul'
+NAME = 'Mohit'
+Name = 'Rohit'
+
+print("name :", name)
+print("NAME :", NAME)
+print("Name :", Name)
+
+# 6. variable name declaration should start from begining of any line
+#    can not add space and then declare variable name.
+
+
+##### Math operations with numbers ####
+# """ : triple quote we use for multiline comments
+"""
++ : plus operator
+- : minus operator
+* : multiplication operator
+/ : division operator
+// : division operator
+%  : Remainder operator
+** : power operator
+== : equal to operator
+= : Assignment operator
+!= : not equal to operator
+"""
+
+print("_"*50)
+# + : plus operator
+
+a1 = 500
+b1 = 600
+c1 = a1+b1
+print("addition :", c1)
+
+
+# - : minus operator
+p1 = 500
+p2 = 300
+p3 = p1 - p2
+print("subtraction :", p3)
+print("subtraction :", p1-p2)
+
+# * : multiplication operation
+x1 = 5
+x2 = 50
+x3 = "Hello"
+print("multiplication :", x1*x2) # 250
+print("Repeat string :", x3*x1) # HelloHelloHelloHelloHello
+
+# division with single / and double //
+
+q1 = 50
+q2 = 6
+q3 = 7
+print("division with single / :", q1/q2) # 8.333333333333334
+print("division with double // :", q1//q3) # 7
+
+
+# % : remainder operator
+
+var1 = 14
+var2 = 5
+print("remainder value :", var1%var2) # 4
+
+# ** power operator
+print("square of 5 :", 5**2) # 25
+print("cube of 6 :", 6**3) # 216
+
+# == : equal to operator
+v1 = 500
+v2 = 600
+v3 = 500
+print("compare and v1 and v2 :", v1 == v2) # False
+print("compare and v1 and v3 :", v1 == v3) # True
+print("compare and v1 and v3 :", v1 != v2) # True
+
+
+# solve the equation
+#(a+b)^2 = a^2 + b^2 + 2ab
+a = 40
+b = 30
+
+LHS = (a+b)**2
+print("LHS output :", LHS)
+
+RHS = a**2 + b**2 + 2*a*b
+print("RHS output :",RHS)
\ No newline at end of file
diff --git a/keerthi/python variables pratice/Data types.py b/.idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55_[Changes]1/shelved.patch
rename from keerthi/python variables pratice/Data types.py
rename to .idea/shelf/Uncommitted_changes_before_Update_at_20-05-2024_20_55_[Changes]1/shelved.patch
diff --git a/Sushmita/pythonprogram/variables/var1.py b/Sushmita/pythonprogram/variables/var1.py
new file mode 100644
diff --git a/Sunita/New Text Document.txt b/Praveen/helloworld.py
rename from Sunita/New Text Document.txt
rename to Praveen/helloworld.py
